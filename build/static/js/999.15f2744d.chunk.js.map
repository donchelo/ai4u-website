{"version":3,"file":"static/js/999.15f2744d.chunk.js","mappings":"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","sources":["components/ui/Button.tsx","components/ui/DiagnosticCTA.tsx","components/ServiceCard.tsx","components/ui/ProcessStep.tsx","pages/Services.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { Button as MuiButton, ButtonProps as MuiButtonProps, styled } from '@mui/material';\r\n\r\ninterface ButtonProps extends Omit<MuiButtonProps, 'variant'> {\r\n  variant?: 'primary' | 'secondary' | 'outline';\r\n  size?: 'small' | 'medium' | 'large';\r\n  children?: ReactNode;\r\n}\r\n\r\n// Botón personalizado con estilos consistentes\r\nconst StyledButton = styled(MuiButton)(({ theme }) => ({\r\n  borderRadius: '2px',\r\n  fontWeight: 500,\r\n  textTransform: 'none',\r\n  padding: '8px 24px',\r\n  transition: 'all 0.3s ease',\r\n  boxShadow: 'none',\r\n  \r\n  // Estilos para variante primaria\r\n  '&.MuiButton-containedPrimary': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  \r\n  // Estilos para variante secundaria\r\n  '&.MuiButton-containedSecondary': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.secondary.main,\r\n    border: `1px solid ${theme.palette.secondary.main}`,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  \r\n  // Estilos para variante outline\r\n  '&.MuiButton-outlined': {\r\n    backgroundColor: 'transparent',\r\n    borderWidth: '1px',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      borderWidth: '1px',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  \r\n  // Estilos para tamaños\r\n  '&.MuiButton-sizeSmall': {\r\n    padding: '6px 16px',\r\n    fontSize: '0.875rem',\r\n  },\r\n  '&.MuiButton-sizeMedium': {\r\n    padding: '8px 24px',\r\n    fontSize: '1rem',\r\n  },\r\n  '&.MuiButton-sizeLarge': {\r\n    padding: '10px 32px',\r\n    fontSize: '1.125rem',\r\n  },\r\n  \r\n  // Estilos para estado deshabilitado\r\n  '&.Mui-disabled': {\r\n    color: theme.palette.action.disabled,\r\n    borderColor: theme.palette.action.disabledBackground,\r\n  }\r\n}));\r\n\r\nexport const Button = ({\r\n  children,\r\n  variant = 'primary',\r\n  size = 'medium',\r\n  color,\r\n  ...props\r\n}: ButtonProps) => {\r\n  // Mapeo de variantes personalizadas a variantes de Material UI\r\n  let muiVariant: MuiButtonProps['variant'] = 'contained';\r\n  let muiColor: MuiButtonProps['color'] = 'primary';\r\n\r\n  switch (variant) {\r\n    case 'primary':\r\n      muiVariant = 'contained';\r\n      muiColor = 'primary';\r\n      break;\r\n    case 'secondary':\r\n      muiVariant = 'contained';\r\n      muiColor = 'secondary';\r\n      break;\r\n    case 'outline':\r\n      muiVariant = 'outlined';\r\n      muiColor = 'primary';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      variant={muiVariant}\r\n      color={color || muiColor}\r\n      size={size}\r\n      disableElevation\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button; ","import React from 'react';\r\nimport { Button } from './Button';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\n\r\nconst CALENDLY_URL = 'https://calendly.com/mgarciap333/ai4u';\r\n\r\ntype ButtonVariant = 'primary' | 'secondary' | 'outline';\r\ntype ButtonSize = 'small' | 'medium' | 'large';\r\n\r\ninterface DiagnosticCTAProps {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  showIcon?: boolean;\r\n  text?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const DiagnosticCTA = ({\r\n  variant = 'primary' as ButtonVariant,\r\n  size = 'medium' as ButtonSize,\r\n  showIcon = false,\r\n  text = 'Diagnóstico gratis',\r\n  className,\r\n}: DiagnosticCTAProps) => {\r\n  return (\r\n    <Button\r\n      variant={variant as ButtonVariant}\r\n      size={size as ButtonSize}\r\n      onClick={() => window.open(CALENDLY_URL, '_blank', 'noopener,noreferrer')}\r\n      startIcon={showIcon ? <CalendarMonthIcon /> : undefined}\r\n      className={className}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DiagnosticCTA; ","import React from 'react';\nimport {\n  Paper,\n  Box,\n  Chip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@mui/material';\nimport { H3, BodyText } from './ui/Typography';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { Service, ServiceStatus } from '../types/service';\n\ninterface ServiceCardProps {\n  service: Service;\n  showPrice?: boolean;\n  showDeliveryTime?: boolean;\n  compact?: boolean;\n}\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ \n  service, \n  showPrice = true, \n  showDeliveryTime = true,\n  compact = false \n}) => {\n  const getStatusColor = (status: ServiceStatus) => {\n    switch (status) {\n      case ServiceStatus.ACTIVE: return 'success';\n      case ServiceStatus.COMING_SOON: return 'info';\n      case ServiceStatus.DEPRECATED: return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getStatusText = (status: ServiceStatus) => {\n    switch (status) {\n      case ServiceStatus.ACTIVE: return 'Disponible';\n      case ServiceStatus.COMING_SOON: return 'Próximamente';\n      case ServiceStatus.DEPRECATED: return 'Descontinuado';\n      default: return 'Inactivo';\n    }\n  };\n\n  return (\n    <Paper \n      elevation={service.featured ? 4 : 2}\n      sx={{ \n        p: compact ? 2 : 3, \n        borderRadius: 3, \n        height: '100%', \n        display: 'flex', \n        flexDirection: 'column',\n        position: 'relative',\n        borderLeft: service.featured ? `4px solid ${service.color}` : 'none',\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: '0 8px 25px rgba(0,0,0,0.15)'\n        }\n      }}\n    >\n      {/* Status Badge */}\n      <Box sx={{ position: 'absolute', top: 12, right: 12 }}>\n        <Chip \n          label={getStatusText(service.status)}\n          size=\"small\"\n          color={getStatusColor(service.status)}\n          variant={service.status === ServiceStatus.ACTIVE ? 'filled' : 'outlined'}\n        />\n      </Box>\n\n      {/* Featured Badge */}\n      {service.featured && (\n        <Box sx={{ position: 'absolute', top: -8, left: 16 }}>\n          <Chip \n            label=\"Destacado\"\n            size=\"small\"\n            sx={{ \n              bgcolor: service.color,\n              color: 'white',\n              fontWeight: 'bold'\n            }}\n          />\n        </Box>\n      )}\n\n      {/* Header */}\n      <Box sx={{ mb: 2, mt: service.featured ? 1 : 0 }}>\n        <H3 \n          sx={{ \n            mb: 1, \n            textAlign: 'center',\n            color: service.color || 'primary.main'\n          }}\n        >\n          {service.title}\n        </H3>\n        <BodyText \n          sx={{ \n            mb: 2, \n            fontWeight: 600, \n            textAlign: 'center',\n            color: 'text.secondary'\n          }}\n        >\n          {service.subtitle}\n        </BodyText>\n        \n        {!compact && (\n          <BodyText sx={{ mb: 2, lineHeight: 1.6 }}>\n            {service.description}\n          </BodyText>\n        )}\n      </Box>\n\n      {/* Benefits */}\n      {!compact && (\n        <Box sx={{ mb: 2, flexGrow: 1 }}>\n          <BodyText sx={{ fontWeight: 600, mb: 1 }}>Beneficios:</BodyText>\n          <List dense disablePadding>\n            {service.benefits.map((benefit, index) => (\n              <ListItem key={index} disableGutters sx={{ py: 0.5 }}>\n                <ListItemIcon sx={{ minWidth: 32 }}>\n                  <CheckCircleOutlineIcon \n                    sx={{ color: service.color || 'primary.main' }}\n                    fontSize=\"small\" \n                  />\n                </ListItemIcon>\n                <ListItemText \n                  primary={benefit}\n                  primaryTypographyProps={{\n                    fontSize: '0.9rem',\n                    lineHeight: 1.4\n                  }}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      )}\n\n      {/* Tags */}\n      <Box sx={{ mb: 2 }}>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n          {service.tags.slice(0, compact ? 2 : 4).map((tag, index) => (\n            <Chip\n              key={index}\n              label={tag}\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{ \n                fontSize: '0.75rem',\n                height: 24,\n                '& .MuiChip-label': { px: 1 }\n              }}\n            />\n          ))}\n          {service.tags.length > (compact ? 2 : 4) && (\n            <Chip\n              label={`+${service.tags.length - (compact ? 2 : 4)}`}\n              size=\"small\"\n              variant=\"filled\"\n              sx={{ \n                fontSize: '0.75rem',\n                height: 24,\n                bgcolor: 'grey.300',\n                color: 'grey.700'\n              }}\n            />\n          )}\n        </Box>\n      </Box>\n\n      {/* Price and Time */}\n      <Box sx={{ mt: 'auto', pt: 2, borderTop: '1px solid', borderColor: 'divider' }}>\n        {showPrice && (\n          <Typography \n            variant=\"body2\" \n            sx={{ \n              fontWeight: 'bold',\n              color: service.color || 'primary.main',\n              fontSize: '1.1rem'\n            }}\n          >\n            {service.price}\n          </Typography>\n        )}\n        {showDeliveryTime && (\n          <Typography \n            variant=\"body2\" \n            sx={{ \n              color: 'text.secondary',\n              mt: 0.5\n            }}\n          >\n            ⏱️ {service.deliveryTime}\n          </Typography>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ServiceCard;","import React from 'react';\r\nimport { Box, BoxProps } from '@mui/material';\r\nimport { BodyText } from './Typography';\r\n\r\ninterface ProcessStepProps extends Omit<BoxProps, 'component'> {\r\n  number: number;\r\n  title: string;\r\n  description: string;\r\n  color?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nconst ProcessStep: React.FC<ProcessStepProps> = ({ \r\n  number, \r\n  title, \r\n  description, \r\n  color = 'primary.main',\r\n  size = 'medium',\r\n  sx,\r\n  ...props \r\n}: ProcessStepProps) => {\r\n  const getSizeStyles = () => {\r\n    switch (size) {\r\n      case 'small':\r\n        return {\r\n          circleSize: 32,\r\n          fontSize: '1rem',\r\n          titleSize: '0.9rem',\r\n          descriptionSize: '0.8rem'\r\n        };\r\n      case 'large':\r\n        return {\r\n          circleSize: 60,\r\n          fontSize: '1.5rem',\r\n          titleSize: '1.1rem',\r\n          descriptionSize: '0.9rem'\r\n        };\r\n      default:\r\n        return {\r\n          circleSize: 40,\r\n          fontSize: '1.2rem',\r\n          titleSize: '1rem',\r\n          descriptionSize: '0.875rem'\r\n        };\r\n    }\r\n  };\r\n\r\n  const { circleSize, fontSize, titleSize, descriptionSize } = getSizeStyles();\r\n\r\n  return (\r\n    <Box \r\n      sx={{ \r\n        display: 'flex', \r\n        mb: 2,\r\n        ...sx \r\n      }}\r\n      {...props}\r\n    >\r\n      <Box \r\n        sx={{ \r\n          width: circleSize, \r\n          height: circleSize, \r\n          borderRadius: '50%', \r\n          bgcolor: color, \r\n          color: 'white', \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          flexShrink: 0,\r\n          mr: 2,\r\n          fontSize,\r\n          fontWeight: 'bold'\r\n        }}\r\n      >\r\n        {number}\r\n      </Box>\r\n      <Box sx={{ flex: 1 }}>\r\n        <BodyText \r\n          sx={{ \r\n            fontWeight: 600, \r\n            fontSize: titleSize,\r\n            mb: 0.5\r\n          }}\r\n        >\r\n          {title}\r\n        </BodyText>\r\n        <BodyText \r\n          color=\"text.secondary\" \r\n          sx={{ fontSize: descriptionSize }}\r\n        >\r\n          {description}\r\n        </BodyText>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProcessStep; ","import React, { useState } from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Divider, \n  Paper,\n  Tabs,\n  Tab,\n  TextField,\n  InputAdornment,\n  Chip,\n  Stack,\n  FormGroup,\n  FormControlLabel,\n  Switch\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { H1, H2, BodyText } from '../components/ui/Typography';\nimport { DiagnosticCTA } from '../components/ui/DiagnosticCTA';\nimport ServiceCard from '../components/ServiceCard';\nimport ProcessStep from '../components/ui/ProcessStep';\nimport { useServicesContext } from '../context/ServicesContext';\nimport { ServiceCategory } from '../types/service';\nimport { SERVICE_CONFIG } from '../utils/constants';\n\n\n\n\n\nconst Services: React.FC = () => {\n  const { \n    services: filteredServices, \n    config,\n    stats,\n    filters,\n    setCategoryFilter,\n    setSearchTerm,\n    setFeaturedFilter,\n    resetFilters,\n    getCategories\n  } = useServicesContext();\n\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [showFeaturedOnly, setShowFeaturedOnly] = useState<boolean>(false);\n\n  // Mapeo de categorías para los tabs\n  const categoryTabs = [\n    { label: 'Todos', value: undefined },\n    { label: 'Asistentes IA', value: ServiceCategory.AI_ASSISTANT },\n    { label: 'Automatización', value: ServiceCategory.AUTOMATION },\n    { label: 'Análisis', value: ServiceCategory.ANALYTICS },\n    { label: 'E-commerce', value: ServiceCategory.ECOMMERCE },\n    { label: 'Capacitación', value: ServiceCategory.TRAINING },\n    { label: 'Consultoría', value: ServiceCategory.CONSULTING }\n  ];\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedTab(newValue);\n    setCategoryFilter(categoryTabs[newValue].value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setSearchTerm(value || undefined);\n  };\n\n  const handleFeaturedToggle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const featured = event.target.checked;\n    setShowFeaturedOnly(featured);\n    setFeaturedFilter(featured || undefined);\n  };\n\n  const clearFilters = () => {\n    setSelectedTab(0);\n    setSearchValue('');\n    setShowFeaturedOnly(false);\n    resetFilters();\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: { xs: 4, md: 8 } }}>\n      {/* Hero Section */}\n      <Box sx={{ mb: 6 }}>\n        <Box sx={{ textAlign: 'center' }}>\n          <H1 sx={{ mb: 2 }}>Servicios AI4U</H1>\n          <H2 sx={{ mb: 3, fontWeight: 500 }}>Construimos tu infraestructura de IA personalizada</H2>\n        </Box>\n        <BodyText sx={{ fontSize: '1.1rem', maxWidth: 800, mx: 'auto', textAlign: 'center' }}>\n          En AI4U nos especializamos en crear soluciones de inteligencia artificial adaptadas específicamente a tu negocio. \n          Automatizamos procesos, liberamos tiempo operativo y transformamos ese tiempo en libertad estratégica.\n        </BodyText>\n      </Box>\n\n      {/* Stats Section */}\n      <Box sx={{ mb: 6 }}>\n        <Grid container spacing={2} justifyContent=\"center\">\n          <Grid item xs={6} sm={3}>\n            <Paper sx={{ p: 2, textAlign: 'center' }}>\n              <H2 sx={{ color: 'primary.main', mb: 0 }}>{stats.total}</H2>\n              <BodyText variant=\"caption\">Servicios Totales</BodyText>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <Paper sx={{ p: 2, textAlign: 'center' }}>\n              <H2 sx={{ color: 'success.main', mb: 0 }}>{stats.active}</H2>\n              <BodyText variant=\"caption\">Disponibles</BodyText>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <Paper sx={{ p: 2, textAlign: 'center' }}>\n              <H2 sx={{ color: 'warning.main', mb: 0 }}>{stats.featured}</H2>\n              <BodyText variant=\"caption\">Destacados</BodyText>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <Paper sx={{ p: 2, textAlign: 'center' }}>\n              <H2 sx={{ color: 'info.main', mb: 0 }}>{getCategories().length}</H2>\n              <BodyText variant=\"caption\">Categorías</BodyText>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* Our Process Section */}\n      <Box sx={{ mb: 8 }}>\n        <H2 sx={{ mb: 4, textAlign: 'center' }}>Nuestro proceso</H2>\n        \n        <Grid container spacing={3} justifyContent=\"center\">\n          <Grid item xs={12} md={8}>\n            <Box sx={{ mb: 3 }}>\n              <ProcessStep \n                number={1} \n                title={`Diagnóstico gratuito (${SERVICE_CONFIG.DIAGNOSTIC_DURATION} minutos)`}\n                description=\"Identificamos todas las oportunidades de automatización en tu negocio\"\n              />\n              <ProcessStep \n                number={2} \n                title=\"Definición de prioridades\" \n                description=\"Establecemos qué procesos automatizar primero según tu ROI\"\n              />\n              <ProcessStep \n                number={3} \n                title=\"Presupuesto personalizado\" \n                description=\"Adaptamos las soluciones a tu capacidad de inversión\"\n              />\n              <ProcessStep \n                number={4} \n                title=\"Implementación\" \n                description=\"Desarrollamos e integramos las soluciones en tu negocio\"\n              />\n            </Box>\n            \n            <Box sx={{ textAlign: 'center', mt: 4 }}>\n              <DiagnosticCTA \n                variant=\"primary\" \n                size=\"medium\" \n                text=\"Iniciar con diagnóstico gratuito\" \n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Divider sx={{ my: 6 }} />\n\n      {/* Services Filter Section */}\n      <Box sx={{ mb: 4 }}>\n        <H2 sx={{ mb: 4, textAlign: 'center' }}>Nuestros servicios</H2>\n        \n        {/* Search and Filters */}\n        <Box sx={{ mb: 4 }}>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                placeholder=\"Buscar servicios...\"\n                value={searchValue}\n                onChange={handleSearchChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={showFeaturedOnly}\n                      onChange={handleFeaturedToggle}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Solo destacados\"\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Stack spacing={1} direction=\"row\">\n                <Chip\n                  label=\"Limpiar filtros\"\n                  onClick={clearFilters}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  clickable\n                />\n                <Chip\n                  label={`${filteredServices.length} servicios`}\n                  color=\"primary\"\n                  size=\"small\"\n                />\n              </Stack>\n            </Grid>\n          </Grid>\n        </Box>\n\n        {/* Category Tabs */}\n        <Box sx={{ mb: 4 }}>\n          <Tabs\n            value={selectedTab}\n            onChange={handleTabChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            sx={{\n              '& .MuiTabs-scrollButtons': {\n                '&.Mui-disabled': { opacity: 0.3 }\n              }\n            }}\n          >\n            {categoryTabs.map((tab, index) => (\n              <Tab key={index} label={tab.label} />\n            ))}\n          </Tabs>\n        </Box>\n      </Box>\n\n      {/* Services Grid */}\n      <Box sx={{ mb: 8 }}>\n        <Grid container spacing={4}>\n          {filteredServices.map((service) => (\n            <Grid \n              item \n              xs={12} \n              md={config.displaySettings.cardsPerRow === 4 ? 3 : 4} \n              key={service.id}\n            >\n              <ServiceCard \n                service={service}\n                showPrice={config.displaySettings.showPrices}\n                showDeliveryTime={config.displaySettings.showDeliveryTime}\n              />\n            </Grid>\n          ))}\n        </Grid>\n\n        {filteredServices.length === 0 && (\n          <Box sx={{ textAlign: 'center', py: 8 }}>\n            <BodyText sx={{ fontSize: '1.2rem', color: 'text.secondary' }}>\n              No se encontraron servicios que coincidan con los filtros seleccionados.\n            </BodyText>\n            <Box sx={{ mt: 2 }}>\n              <Chip\n                label=\"Limpiar filtros\"\n                onClick={clearFilters}\n                color=\"primary\"\n                clickable\n              />\n            </Box>\n          </Box>\n        )}\n      </Box>\n\n\n      {/* CTA Section */}\n      <Box sx={{ py: 6, bgcolor: 'background.paper', borderRadius: 3, boxShadow: 1 }}>\n        <Box sx={{ textAlign: 'center' }}>\n          <H2 sx={{ mb: 2 }}>¿Listo para liberar tu tiempo estratégico?</H2>\n        </Box>\n        <BodyText sx={{ mb: 4, maxWidth: 800, mx: 'auto', textAlign: 'center' }}>\n          Agenda tu diagnóstico gratuito de 30 minutos y descubre cómo podemos transformar tu negocio con IA.\n        </BodyText>\n        \n        <Box sx={{ textAlign: 'center' }}>\n          <DiagnosticCTA variant=\"primary\" size=\"large\" text=\"AGENDAR DIAGNÓSTICO GRATUITO\" />\n          \n          <BodyText sx={{ mt: 3, fontStyle: 'italic', color: 'text.secondary' }}>\n            Sin compromiso • Personalizado a tu negocio • Resultados desde el primer mes\n          </BodyText>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Services;"],"names":["StyledButton","styled","MuiButton","_ref","theme","borderRadius","fontWeight","textTransform","padding","transition","boxShadow","backgroundColor","color","palette","primary","main","border","action","hover","secondary","borderWidth","fontSize","disabled","borderColor","disabledBackground","Button","_ref2","children","variant","size","props","muiVariant","muiColor","_jsx","disableElevation","DiagnosticCTA","showIcon","text","className","onClick","window","open","startIcon","CalendarMonthIcon","undefined","service","showPrice","showDeliveryTime","compact","_jsxs","Paper","elevation","featured","sx","p","height","display","flexDirection","position","borderLeft","transform","Box","top","right","Chip","label","status","ServiceStatus","ACTIVE","COMING_SOON","DEPRECATED","getStatusText","getStatusColor","left","bgcolor","mb","mt","H3","textAlign","title","BodyText","subtitle","lineHeight","description","flexGrow","List","dense","disablePadding","benefits","map","benefit","index","ListItem","disableGutters","py","ListItemIcon","minWidth","CheckCircleOutlineIcon","ListItemText","primaryTypographyProps","flexWrap","gap","tags","slice","tag","px","length","pt","borderTop","Typography","price","deliveryTime","number","circleSize","titleSize","descriptionSize","getSizeStyles","width","alignItems","justifyContent","flexShrink","mr","flex","Services","services","filteredServices","config","stats","filters","setCategoryFilter","setSearchTerm","setFeaturedFilter","resetFilters","getCategories","useServicesContext","selectedTab","setSelectedTab","useState","searchValue","setSearchValue","showFeaturedOnly","setShowFeaturedOnly","categoryTabs","value","ServiceCategory","AI_ASSISTANT","AUTOMATION","ANALYTICS","ECOMMERCE","TRAINING","CONSULTING","clearFilters","Container","maxWidth","xs","md","H1","H2","mx","Grid","container","spacing","item","sm","total","active","ProcessStep","SERVICE_CONFIG","DIAGNOSTIC_DURATION","Divider","my","TextField","fullWidth","placeholder","onChange","event","target","InputProps","startAdornment","InputAdornment","SearchIcon","FormGroup","FormControlLabel","control","Switch","checked","Stack","direction","clickable","Tabs","handleTabChange","newValue","scrollButtons","opacity","tab","Tab","displaySettings","cardsPerRow","ServiceCard","showPrices","id","fontStyle"],"sourceRoot":""}