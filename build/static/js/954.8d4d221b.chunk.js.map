{"version":3,"file":"static/js/954.8d4d221b.chunk.js","mappings":"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","sources":["pages/Home.tsx"],"sourcesContent":["import React from 'react';\nimport { Container, Grid, Box, Stack, useTheme } from '@mui/material';\nimport { H2, H3, BodyText, Button, GeometricIcon } from '../components/shared/ui/atoms';\nimport { HeroSection } from '../components/shared/ui/organisms';\nimport { Card, DiagnosticCTA, GalleryFrame } from '../components/shared/ui/molecules';\nimport { useColorMode } from '../context/ThemeContext';\nimport { useLanguage } from '../hooks';\n\nconst Home = () => {\n  const theme = useTheme();\n  const { mode } = useColorMode();\n  const { t } = useLanguage();\n\n  // Obtener traducciones para las features\n  const features = [\n    {\n      title: t('home.features.items.0.title'),\n      description: t('home.features.items.0.description')\n    },\n    {\n      title: t('home.features.items.1.title'),\n      description: t('home.features.items.1.description')\n    },\n    {\n      title: t('home.features.items.2.title'),\n      description: t('home.features.items.2.description')\n    },\n  ];\n\n  // Obtener traducciones para las categorías de servicios\n  const serviceCategories = [\n    {\n      title: t('home.services.categories.0.title'),\n      description: t('home.services.categories.0.description')\n    },\n    {\n      title: t('home.services.categories.1.title'),\n      description: t('home.services.categories.1.description')\n    },\n    {\n      title: t('home.services.categories.2.title'),\n      description: t('home.services.categories.2.description')\n    },\n    {\n      title: t('home.services.categories.3.title'),\n      description: t('home.services.categories.3.description')\n    },\n  ];\n\n  // Obtener traducciones para las características del robot\n  const robotFeatures = [\n    t('home.robot.features.0'),\n    t('home.robot.features.1'),\n    t('home.robot.features.2'),\n    t('home.robot.features.3'),\n  ];\n\n  return (\n    <Box>\n      {/* Hero Section */}\n      <HeroSection \n        customTitle={t('hero.customTitle')}\n        customSubtitle={t('hero.customSubtitle')}\n        primaryButtonText={t('hero.primaryButtonText')}\n        secondaryButtonText={t('hero.secondaryButtonText')}\n      />\n\n      {/* Features Section */}\n      <Box sx={{ py: { xs: 6, md: 10 }, bgcolor: 'background.default' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ textAlign: 'center', mb: 2, fontWeight: 400, color: 'text.primary' }}>\n            {t('home.features.title')}\n          </H2>\n          <BodyText sx={{ \n            color: 'text.secondary', \n            textAlign: 'center', \n            maxWidth: 700, \n            mb: 6,\n            mx: 'auto',\n            fontSize: '1rem',\n            lineHeight: 1.6\n          }}>\n            {t('home.features.subtitle')}\n          </BodyText>\n          <Grid container spacing={4}>\n            {features.map((feature, idx) => (\n              <Grid item xs={12} md={4} key={idx}>\n                <Card \n                  variant=\"light\"\n                  sx={{ \n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    bgcolor: 'background.paper',\n                    border: `1px solid ${theme.palette.divider}`,\n                    '&:hover': {\n                      boxShadow: theme.shadows[4],\n                      transform: 'translateY(-2px)',\n                      transition: 'all 0.3s ease'\n                    }\n                  }}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <GeometricIcon \n                      type={idx === 0 ? \"triangle\" : idx === 1 ? \"square\" : \"circle\"} \n                      size=\"small\" \n                      color={theme.palette.text.secondary}\n                      variant=\"minimal\" \n                    />\n                    <H3 sx={{ \n                      ml: 2,\n                      fontWeight: 500,\n                      lineHeight: 1.3,\n                      color: 'text.primary',\n                      fontSize: '1.1rem'\n                    }}>\n                      {feature.title}\n                    </H3>\n                  </Box>\n                  <BodyText sx={{ \n                    color: 'text.secondary', \n                    lineHeight: 1.6,\n                    fontSize: '0.95rem',\n                    flexGrow: 1\n                  }}>\n                    {feature.description}\n                  </BodyText>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </Box>\n\n      {/* Robot Section - Fondo oscuro con contraste automático */}\n      <Box sx={{ \n        py: { xs: 6, md: 10 }, \n        bgcolor: mode === 'dark' ? 'background.default' : '#1a1a1a', \n        color: mode === 'dark' ? 'text.primary' : 'white' \n      }}>\n        <Container maxWidth=\"lg\">\n          <Stack direction={{ xs: 'column', md: 'row' }} spacing={6} alignItems=\"center\" justifyContent=\"center\">\n            <Box sx={{ flex: 1, textAlign: { xs: 'center', md: 'left' } }}>\n              <H2 sx={{ \n                mb: 2, \n                color: mode === 'dark' ? 'text.primary' : 'white', \n                fontWeight: 300 \n              }}>\n                {t('home.robot.title')}\n              </H2>\n              <BodyText sx={{ \n                mb: 6, \n                color: mode === 'dark' ? 'text.secondary' : 'rgba(255, 255, 255, 0.8)', \n                maxWidth: 600, \n                fontSize: '1.1rem', \n                lineHeight: 1.7 \n              }}>\n                {t('home.robot.subtitle')}\n              </BodyText>\n              \n              <BodyText sx={{ \n                mb: 4, \n                color: mode === 'dark' ? 'text.disabled' : 'rgba(255, 255, 255, 0.6)', \n                fontSize: '0.9rem', \n                fontStyle: 'italic' \n              }}>\n                {t('home.robot.preview')}\n              </BodyText>\n              \n              <H3 sx={{ \n                mb: 4, \n                color: mode === 'dark' ? 'text.primary' : 'white', \n                fontWeight: 400, \n                fontSize: '1.2rem' \n              }}>\n                {t('home.robot.uniqueTitle')}\n              </H3>\n              \n              {/* Lista ultra minimalista con iconos geométricos */}\n              <Stack spacing={4} sx={{ mb: 6, maxWidth: 500 }}>\n                {robotFeatures.map((feature, idx) => (\n                  <Stack key={idx} direction=\"row\" alignItems=\"center\" spacing={3}>\n                    <GeometricIcon \n                      type={idx === 0 ? \"circle\" : \"dot\"} \n                      size=\"small\" \n                      color={idx === 0 ? \"#B6CA40\" : (mode === 'dark' ? 'text.disabled' : 'rgba(255, 255, 255, 0.4)')} \n                      variant={idx === 0 ? \"filled\" : \"minimal\"} \n                    />\n                    <BodyText sx={{ \n                      color: mode === 'dark' ? (idx === 0 ? 'text.primary' : 'text.secondary') : (idx === 0 ? 'rgba(255, 255, 255, 0.9)' : 'rgba(255, 255, 255, 0.7)'), \n                      fontSize: '1rem', \n                      lineHeight: 1.6 \n                    }}>\n                      {feature}\n                    </BodyText>\n                  </Stack>\n                ))}\n              </Stack>\n              \n              <Box sx={{ \n                pl: 4,\n                borderLeft: `1px solid ${mode === 'dark' ? 'divider' : 'rgba(255, 255, 255, 0.2)'}`,\n                maxWidth: 500\n              }}>\n                <BodyText sx={{ \n                  fontStyle: 'italic', \n                  color: mode === 'dark' ? 'text.disabled' : 'rgba(255, 255, 255, 0.6)',\n                  fontSize: '1rem',\n                  fontWeight: 300,\n                  lineHeight: 1.6\n                }}>\n                  \"{t('home.robot.quote')}\"\n                </BodyText>\n              </Box>\n            </Box>\n            \n            <Box sx={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n              <GalleryFrame\n                interval={4000}\n                showNavigation={false}\n                showTitle={false}\n                frameStyle=\"glass\"\n                size=\"medium\"\n              />\n            </Box>\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* Services Section */}\n      <Box sx={{ py: { xs: 6, md: 10 }, bgcolor: 'background.default' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ textAlign: 'center', mb: 2, fontWeight: 400, color: 'text.primary' }}>\n            {t('home.services.title')}\n          </H2>\n          <BodyText sx={{ color: 'text.secondary', textAlign: 'center', maxWidth: 700, mb: 6, mx: 'auto', fontSize: '1rem' }}>\n            {t('home.services.subtitle')}\n          </BodyText>\n          <Grid container spacing={4}>\n            {serviceCategories.map((cat, idx) => (\n              <Grid item xs={12} md={3} key={idx}>\n                <Card \n                  variant={idx === 1 ? \"primary\" : \"light\"}\n                  sx={{ \n                    height: '100%',\n                    textAlign: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    bgcolor: idx === 1 ? 'primary.main' : 'background.paper',\n                    border: `1px solid ${idx === 1 ? 'primary.main' : theme.palette.divider}`,\n                    '&:hover': {\n                      boxShadow: theme.shadows[4],\n                      transform: 'translateY(-2px)',\n                      transition: 'all 0.3s ease'\n                    }\n                  }}\n                >\n                  <Box sx={{ mb: 2 }}>\n                    <GeometricIcon \n                      type={idx === 0 ? \"triangle\" : idx === 1 ? \"square\" : idx === 2 ? \"circle\" : \"line\"} \n                      size=\"medium\" \n                      color={idx === 1 ? \"#FFFFFF\" : theme.palette.text.secondary} \n                      variant={idx === 1 ? \"filled\" : \"minimal\"} \n                    />\n                  </Box>\n                  <H3 sx={{ \n                    mb: 2, \n                    color: idx === 1 ? '#FFFFFF' : 'text.primary',\n                    fontWeight: idx === 1 ? 600 : 500,\n                    fontSize: '1.2rem'\n                  }}>\n                    {cat.title}\n                  </H3>\n                  <BodyText sx={{ \n                    color: idx === 1 ? 'rgba(255, 255, 255, 0.9)' : 'text.secondary', \n                    fontSize: '0.95rem', \n                    lineHeight: 1.5,\n                    flexGrow: 1\n                  }}>\n                    {cat.description}\n                  </BodyText>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </Box>\n\n      {/* CTA Section */}\n      <Box sx={{ py: { xs: 6, md: 8 }, bgcolor: 'background.paper' }}>\n        <Container maxWidth=\"md\">\n          <Box sx={{ textAlign: 'center' }}>\n            <H2 sx={{ mb: 3, fontWeight: 400, color: 'text.primary' }}>\n              {t('home.cta.title')}\n            </H2>\n            <BodyText sx={{ mb: 4, color: 'text.secondary', fontSize: '1.1rem' }}>\n              {t('home.cta.subtitle')}\n            </BodyText>\n            <Stack \n              direction={{ xs: 'column', sm: 'row' }} \n              spacing={3} \n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <DiagnosticCTA />\n              <Button variant=\"outline\" size=\"large\">\n                {t('home.cta.exploreButton')}\n              </Button>\n            </Stack>\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home; "],"names":["Home","theme","useTheme","mode","useColorMode","t","useLanguage","features","title","description","serviceCategories","robotFeatures","_jsxs","Box","children","_jsx","HeroSection","customTitle","customSubtitle","primaryButtonText","secondaryButtonText","sx","py","xs","md","bgcolor","Container","maxWidth","H2","textAlign","mb","fontWeight","color","BodyText","mx","fontSize","lineHeight","Grid","container","spacing","map","feature","idx","item","Card","variant","height","display","flexDirection","border","palette","divider","boxShadow","shadows","transform","transition","alignItems","GeometricIcon","type","size","text","secondary","H3","ml","flexGrow","Stack","direction","justifyContent","flex","fontStyle","pl","borderLeft","GalleryFrame","interval","showNavigation","showTitle","frameStyle","cat","sm","DiagnosticCTA","Button"],"sourceRoot":""}