{"version":3,"file":"static/js/858.6a41cd8c.chunk.js","mappings":"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","sources":["components/ui/Button.tsx","components/ui/DiagnosticCTA.tsx","components/ServiceCard.tsx","components/ui/ProcessStep.tsx","components/ui/ServicesFilter.tsx","components/ui/ServicesStats.tsx","pages/Services.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Button as MuiButton, ButtonProps as MuiButtonProps, styled } from '@mui/material';\n\ninterface ButtonProps extends Omit<MuiButtonProps, 'variant'> {\n  variant?: 'primary' | 'secondary' | 'outline';\n  size?: 'small' | 'medium' | 'large';\n  children?: ReactNode;\n}\n\n// Botón personalizado con estilos consistentes\nconst StyledButton = styled(MuiButton)(({ theme }) => ({\n  borderRadius: '2px',\n  fontWeight: 500,\n  textTransform: 'none',\n  padding: '8px 24px',\n  transition: 'all 0.3s ease',\n  boxShadow: 'none',\n  \n  // Estilos para variante primaria - ULTRA DESTACADO\n  '&.MuiButton-containedPrimary': {\n    backgroundColor: '#FF5C00',\n    color: '#FFFFFF',\n    border: 'none',\n    fontWeight: 700,\n    '&:hover': {\n      backgroundColor: '#E54A00',\n      boxShadow: '0 4px 12px rgba(255, 92, 0, 0.3)',\n    },\n  },\n  \n  // Estilos para variante secundaria\n  '&.MuiButton-containedSecondary': {\n    backgroundColor: '#FFFFFF',\n    color: '#000000',\n    border: '1px solid #E5E5E5',\n    '&:hover': {\n      backgroundColor: '#F8F8F8',\n      borderColor: '#D0D0D0',\n      boxShadow: 'none',\n    },\n  },\n  \n  // Estilos para variante outline\n  '&.MuiButton-outlined': {\n    backgroundColor: 'transparent',\n    color: '#000000',\n    border: '1px solid #E5E5E5',\n    '&:hover': {\n      backgroundColor: '#F8F8F8',\n      borderColor: '#D0D0D0',\n      boxShadow: 'none',\n    },\n  },\n  \n  // Estilos para tamaños\n  '&.MuiButton-sizeSmall': {\n    padding: '6px 16px',\n    fontSize: '0.875rem',\n  },\n  '&.MuiButton-sizeMedium': {\n    padding: '8px 24px',\n    fontSize: '1rem',\n  },\n  '&.MuiButton-sizeLarge': {\n    padding: '10px 32px',\n    fontSize: '1.125rem',\n  },\n  \n  // Estilos para estado deshabilitado\n  '&.Mui-disabled': {\n    color: '#CCCCCC',\n    borderColor: '#F0F0F0',\n    backgroundColor: '#F8F8F8'\n  }\n}));\n\nexport const Button = ({\n  children,\n  variant = 'primary',\n  size = 'medium',\n  color,\n  ...props\n}: ButtonProps) => {\n  // Mapeo de variantes personalizadas a variantes de Material UI\n  let muiVariant: MuiButtonProps['variant'] = 'contained';\n  let muiColor: MuiButtonProps['color'] = 'primary';\n\n  switch (variant) {\n    case 'primary':\n      muiVariant = 'contained';\n      muiColor = 'primary';\n      break;\n    case 'secondary':\n      muiVariant = 'contained';\n      muiColor = 'secondary';\n      break;\n    case 'outline':\n      muiVariant = 'outlined';\n      muiColor = 'primary';\n      break;\n  }\n\n  return (\n    <StyledButton\n      variant={muiVariant}\n      color={color || muiColor}\n      size={size}\n      disableElevation\n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button; ","import React from 'react';\r\nimport { Button } from './Button';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\n\r\nconst CALENDLY_URL = 'https://calendly.com/mgarciap333/ai4u';\r\n\r\ntype ButtonVariant = 'primary' | 'secondary' | 'outline';\r\ntype ButtonSize = 'small' | 'medium' | 'large';\r\n\r\ninterface DiagnosticCTAProps {\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  showIcon?: boolean;\r\n  text?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const DiagnosticCTA = ({\r\n  variant = 'primary' as ButtonVariant,\r\n  size = 'medium' as ButtonSize,\r\n  showIcon = false,\r\n  text = 'Diagnóstico gratis',\r\n  className,\r\n}: DiagnosticCTAProps) => {\r\n  return (\r\n    <Button\r\n      variant={variant as ButtonVariant}\r\n      size={size as ButtonSize}\r\n      onClick={() => window.open(CALENDLY_URL, '_blank', 'noopener,noreferrer')}\r\n      startIcon={showIcon ? <CalendarMonthIcon /> : undefined}\r\n      className={className}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DiagnosticCTA; ","import React from 'react';\nimport {\n  Box,\n  Chip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  useTheme\n} from '@mui/material';\nimport { H3, BodyText } from './ui/Typography';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { Service, ServiceStatus } from '../types/service';\n\ninterface ServiceCardProps {\n  service: Service;\n  showPrice?: boolean;\n  showDeliveryTime?: boolean;\n  compact?: boolean;\n}\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ \n  service, \n  showPrice = true, \n  showDeliveryTime = true,\n  compact = false \n}) => {\n  const theme = useTheme();\n\n  const getStatusColor = (status: ServiceStatus) => {\n    switch (status) {\n      case ServiceStatus.ACTIVE: return 'success';\n      case ServiceStatus.COMING_SOON: return 'info';\n      case ServiceStatus.DEPRECATED: return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getStatusText = (status: ServiceStatus) => {\n    switch (status) {\n      case ServiceStatus.ACTIVE: return 'Disponible';\n      case ServiceStatus.COMING_SOON: return 'Próximamente';\n      case ServiceStatus.DEPRECATED: return 'Descontinuado';\n      default: return 'Inactivo';\n    }\n  };\n\n  return (\n    <Box sx={{\n      height: '100%',\n      position: 'relative',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover': {\n        transform: 'translateY(-2px)',\n        '& .service-card-content': {\n          boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n          borderColor: '#D0D0D0'\n        }\n      }\n    }}>\n\n\n      {/* Main Card Content */}\n      <Box className=\"service-card-content\" sx={{\n        p: compact ? 2.5 : 3,\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n        background: '#FFFFFF',\n        border: '1px solid #E5E5E5',\n        borderRadius: 2,\n        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n        overflow: 'hidden'\n      }}>\n        {/* Status Badge */}\n        <Box sx={{ \n          position: 'absolute', \n          top: 12, \n          right: 12,\n          zIndex: 2\n        }}>\n          <Chip \n            label={getStatusText(service.status)}\n            size=\"small\"\n            color={getStatusColor(service.status)}\n            variant={service.status === ServiceStatus.ACTIVE ? 'filled' : 'outlined'}\n            sx={{\n              background: service.status === ServiceStatus.ACTIVE \n                ? '#F0F0F0' \n                : '#FFFFFF',\n              border: '1px solid #E5E5E5',\n              color: '#666666',\n              fontWeight: 500\n            }}\n          />\n        </Box>\n\n        {/* Header */}\n        <Box sx={{ \n          mb: 3,\n          textAlign: 'center'\n        }}>\n          <H3 sx={{ \n            mb: 1.5,\n            color: '#000000',\n            fontSize: { xs: '1.3rem', md: '1.5rem' },\n            fontWeight: 700,\n            lineHeight: 1.3\n          }}>\n            {service.title}\n          </H3>\n          <BodyText sx={{ \n            mb: 2, \n            fontWeight: 600,\n            color: 'text.secondary',\n            fontSize: '1rem',\n            lineHeight: 1.4\n          }}>\n            {service.subtitle}\n          </BodyText>\n          \n          {!compact && (\n            <BodyText sx={{ \n              mb: 3, \n              lineHeight: 1.6,\n              color: 'text.secondary',\n              fontSize: '0.95rem'\n            }}>\n              {service.description}\n            </BodyText>\n          )}\n        </Box>\n\n        {/* Benefits */}\n        {!compact && (\n          <Box sx={{ mb: 3, flexGrow: 1 }}>\n            <BodyText sx={{ \n              fontWeight: 600, \n              mb: 2,\n              color: 'text.primary',\n              fontSize: '0.95rem'\n            }}>\n              Beneficios:\n            </BodyText>\n            <List dense disablePadding>\n              {service.benefits.map((benefit, index) => (\n                <ListItem key={index} disableGutters sx={{ py: 0.5 }}>\n                  <ListItemIcon sx={{ minWidth: 28 }}>\n                                       <CheckCircleOutlineIcon \n                     sx={{ \n                       color: '#666666',\n                       fontSize: '1.1rem'\n                     }}\n                   />\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={benefit}\n                    primaryTypographyProps={{\n                      fontSize: '0.85rem',\n                      lineHeight: 1.5,\n                      color: 'text.secondary'\n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n\n        {/* Tags */}\n        <Box sx={{ mb: 3 }}>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n            {service.tags.slice(0, compact ? 2 : 4).map((tag, index) => (\n              <Chip\n                key={index}\n                label={tag}\n                size=\"small\"\n                variant=\"outlined\"\n                                 sx={{ \n                   fontSize: '0.7rem',\n                   height: 24,\n                   background: '#F8F8F8',\n                   border: '1px solid #E5E5E5',\n                   color: '#666666',\n                   '& .MuiChip-label': { px: 1 },\n                   '&:hover': {\n                     background: '#F0F0F0',\n                     borderColor: '#D0D0D0'\n                   }\n                 }}\n              />\n            ))}\n            {service.tags.length > (compact ? 2 : 4) && (\n              <Chip\n                label={`+${service.tags.length - (compact ? 2 : 4)}`}\n                size=\"small\"\n                variant=\"filled\"\n                sx={{ \n                  fontSize: '0.7rem',\n                  height: 24,\n                  background: '#E5E5E5',\n                  color: '#666666'\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n\n        {/* Price and Time */}\n        <Box sx={{ \n          mt: 'auto', \n          pt: 2, \n          borderTop: '1px solid',\n          borderColor: 'rgba(0, 0, 0, 0.08)'\n        }}>\n          {showPrice && (\n            <Typography \n              variant=\"body2\" \n              sx={{ \n                fontWeight: 'bold',\n                color: '#000000',\n                fontSize: '1.1rem',\n                mb: 0.5\n              }}\n            >\n              {service.price}\n            </Typography>\n          )}\n          {showDeliveryTime && (\n            <Typography \n              variant=\"body2\" \n              sx={{ \n                color: 'text.secondary',\n                fontSize: '0.85rem'\n              }}\n            >\n              {service.deliveryTime}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ServiceCard;","import React from 'react';\r\nimport { Box, BoxProps } from '@mui/material';\r\nimport { BodyText } from './Typography';\r\n\r\ninterface ProcessStepProps extends Omit<BoxProps, 'component'> {\r\n  number: number;\r\n  title: string;\r\n  description: string;\r\n  color?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\nconst ProcessStep: React.FC<ProcessStepProps> = ({ \r\n  number, \r\n  title, \r\n  description, \r\n  color = 'primary.main',\r\n  size = 'medium',\r\n  sx,\r\n  ...props \r\n}: ProcessStepProps) => {\r\n  const getSizeStyles = () => {\r\n    switch (size) {\r\n      case 'small':\r\n        return {\r\n          circleSize: 32,\r\n          fontSize: '1rem',\r\n          titleSize: '0.9rem',\r\n          descriptionSize: '0.8rem'\r\n        };\r\n      case 'large':\r\n        return {\r\n          circleSize: 60,\r\n          fontSize: '1.5rem',\r\n          titleSize: '1.1rem',\r\n          descriptionSize: '0.9rem'\r\n        };\r\n      default:\r\n        return {\r\n          circleSize: 40,\r\n          fontSize: '1.2rem',\r\n          titleSize: '1rem',\r\n          descriptionSize: '0.875rem'\r\n        };\r\n    }\r\n  };\r\n\r\n  const { circleSize, fontSize, titleSize, descriptionSize } = getSizeStyles();\r\n\r\n  return (\r\n    <Box \r\n      sx={{ \r\n        display: 'flex', \r\n        mb: 2,\r\n        ...sx \r\n      }}\r\n      {...props}\r\n    >\r\n      <Box \r\n        sx={{ \r\n          width: circleSize, \r\n          height: circleSize, \r\n          borderRadius: '50%', \r\n          bgcolor: color, \r\n          color: 'white', \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          flexShrink: 0,\r\n          mr: 2,\r\n          fontSize,\r\n          fontWeight: 'bold'\r\n        }}\r\n      >\r\n        {number}\r\n      </Box>\r\n      <Box sx={{ flex: 1 }}>\r\n        <BodyText \r\n          sx={{ \r\n            fontWeight: 600, \r\n            fontSize: titleSize,\r\n            mb: 0.5\r\n          }}\r\n        >\r\n          {title}\r\n        </BodyText>\r\n        <BodyText \r\n          color=\"text.secondary\" \r\n          sx={{ fontSize: descriptionSize }}\r\n        >\r\n          {description}\r\n        </BodyText>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProcessStep; ","import React from 'react';\nimport {\n  Box,\n  TextField,\n  InputAdornment,\n  Chip,\n  Stack,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  Tabs,\n  Tab,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Button } from './Button';\nimport { ServiceCategory } from '../../types/service';\n\ninterface ServicesFilterProps {\n  searchValue: string;\n  onSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  selectedTab: number;\n  onTabChange: (event: React.SyntheticEvent, newValue: number) => void;\n  onClearFilters: () => void;\n  filteredCount: number;\n  categoryTabs: Array<{\n    label: string;\n    value: ServiceCategory | undefined;\n  }>;\n}\n\nconst ServicesFilter: React.FC<ServicesFilterProps> = ({\n  searchValue,\n  onSearchChange,\n  selectedTab,\n  onTabChange,\n  onClearFilters,\n  filteredCount,\n  categoryTabs\n}) => {\n  const theme = useTheme();\n\n  return (\n    <Box sx={{\n      p: 4,\n      background: '#FFFFFF',\n      border: '1px solid #E5E5E5',\n      borderRadius: 2,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n    }}>\n      {/* Search and Controls */}\n      <Box sx={{ mb: 4 }}>\n        <Stack direction={{ xs: 'column', md: 'row' }} spacing={3} alignItems=\"center\">\n          {/* Search Field */}\n          <Box sx={{ flex: 1, width: '100%' }}>\n            <TextField\n              fullWidth\n              placeholder=\"Buscar servicios por nombre, descripción o tags...\"\n              value={searchValue}\n              onChange={onSearchChange}\n                             sx={{\n                 '& .MuiOutlinedInput-root': {\n                   background: '#FFFFFF',\n                   borderRadius: 2,\n                   transition: 'all 0.3s ease',\n                   '&:hover': {\n                     '& .MuiOutlinedInput-notchedOutline': {\n                       borderColor: '#000000',\n                       borderWidth: '1px'\n                     }\n                   },\n                   '&.Mui-focused': {\n                     '& .MuiOutlinedInput-notchedOutline': {\n                       borderColor: '#000000',\n                       borderWidth: '2px'\n                     }\n                   }\n                 },\n                 '& .MuiOutlinedInput-input': {\n                   fontSize: '1rem',\n                   padding: '12px 16px'\n                 }\n               }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon sx={{ color: '#666666' }} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Box>\n\n          {/* Controls */}\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"flex-end\">\n            <Chip\n              label=\"Limpiar filtros\"\n              onClick={onClearFilters}\n              variant=\"outlined\"\n              size=\"small\"\n              clickable\n              icon={<ClearIcon />}\n              sx={{\n                background: '#FFFFFF',\n                border: '1px solid #E5E5E5',\n                '&:hover': {\n                  background: '#F8F8F8',\n                  borderColor: '#000000'\n                }\n              }}\n            />\n            <Chip\n              label={`${filteredCount} servicios`}\n              size=\"small\"\n              sx={{\n                background: '#000000',\n                color: 'white',\n                fontWeight: 'bold'\n              }}\n            />\n          </Stack>\n        </Stack>\n      </Box>\n\n      {/* Category Tabs */}\n      <Box>\n        <Tabs\n          value={selectedTab}\n          onChange={onTabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          sx={{\n            '& .MuiTabs-scrollButtons': {\n              '&.Mui-disabled': { opacity: 0.3 }\n            },\n            '& .MuiTab-root': {\n              minHeight: 48,\n              fontSize: '0.9rem',\n              fontWeight: 500,\n              textTransform: 'none',\n              borderRadius: 2,\n              mx: 0.5,\n              transition: 'all 0.3s ease',\n              color: '#666666',\n              '&:hover': {\n                background: '#F8F8F8',\n                color: '#000000'\n              },\n              '&.Mui-selected': {\n                background: '#F0F0F0',\n                color: '#000000',\n                fontWeight: 600\n              }\n            },\n            '& .MuiTabs-indicator': {\n              height: 2,\n              background: '#000000'\n            }\n          }}\n        >\n          {categoryTabs.map((tab, index) => (\n            <Tab \n              key={index} \n              label={tab.label}\n            />\n          ))}\n        </Tabs>\n      </Box>\n\n      {/* Active Filters Display */}\n      {searchValue && (\n        <Box sx={{ mt: 3, pt: 3, borderTop: '1px solid rgba(0,0,0,0.08)' }}>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <Box sx={{ fontSize: '0.9rem', color: 'text.secondary', fontWeight: 500 }}>\n              Filtros activos:\n            </Box>\n                          <Chip\n                label={`Búsqueda: \"${searchValue}\"`}\n                size=\"small\"\n                onDelete={() => onSearchChange({ target: { value: '' } } as React.ChangeEvent<HTMLInputElement>)}\n                sx={{\n                  background: '#F0F0F0',\n                  color: '#000000',\n                  border: '1px solid #E5E5E5'\n                }}\n              />\n          </Stack>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ServicesFilter; ","import React from 'react';\nimport {\n  Box,\n  Grid,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport { H3, BodyText } from './Typography';\nimport { ServiceCategory } from '../../types/service';\n\ninterface ServicesStatsProps {\n  stats: {\n    total: number;\n    active: number;\n    featured: number;\n    byCategory: Record<ServiceCategory, number>;\n  };\n  getCategories: () => ServiceCategory[];\n}\n\nconst ServicesStats: React.FC<ServicesStatsProps> = ({ stats, getCategories }) => {\n  const theme = useTheme();\n\n  const statItems = [\n    { \n      value: stats.total, \n      label: 'Servicios', \n      color: '#000000',\n      description: 'Total disponibles'\n    },\n    { \n      value: stats.active, \n      label: 'Activos', \n      color: '#000000',\n      description: 'Listos para implementar'\n    },\n    { \n      value: getCategories().length, \n      label: 'Categorías', \n      color: '#000000',\n      description: 'Especialidades técnicas'\n    }\n  ];\n\n  return (\n    <Box sx={{ mb: 8 }}>\n      <Grid container spacing={3} justifyContent=\"center\">\n        {statItems.map((stat, index) => (\n          <Grid item xs={12} sm={4} key={index}>\n            <Box sx={{\n              p: 4,\n              textAlign: 'center',\n              background: '#FFFFFF',\n              border: '1px solid #E5E5E5',\n              borderRadius: 2,\n              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n              '&:hover': {\n                transform: 'translateY(-2px)',\n                boxShadow: '0 4px 12px rgba(0,0,0,0.12)',\n                borderColor: '#D0D0D0'\n              }\n            }}>\n              <H3 sx={{ \n                color: stat.color, \n                mb: 1,\n                fontSize: '2.5rem',\n                fontWeight: 700,\n                lineHeight: 1\n              }}>\n                {stat.value}\n              </H3>\n              <BodyText sx={{ \n                color: 'text.primary',\n                fontSize: '0.95rem',\n                fontWeight: 600,\n                mb: 0.5,\n                textTransform: 'uppercase',\n                letterSpacing: '0.05em'\n              }}>\n                {stat.label}\n              </BodyText>\n              <BodyText sx={{ \n                color: 'text.secondary',\n                fontSize: '0.8rem',\n                lineHeight: 1.4\n              }}>\n                {stat.description}\n              </BodyText>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n\n\n    </Box>\n  );\n};\n\nexport default ServicesStats; ","import React, { useState } from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Divider, \n  Paper,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport { H1, H2, H3, BodyText } from '../components/ui/Typography';\nimport { Button } from '../components/ui/Button';\nimport { DiagnosticCTA } from '../components/ui/DiagnosticCTA';\nimport ServiceCard from '../components/ServiceCard';\nimport ProcessStep from '../components/ui/ProcessStep';\nimport ServicesFilter from '../components/ui/ServicesFilter';\nimport ServicesStats from '../components/ui/ServicesStats';\nimport { useServicesContext } from '../context/ServicesContext';\nimport { ServiceCategory } from '../types/service';\nimport { SERVICE_CONFIG } from '../utils/constants';\n\nconst Services: React.FC = () => {\n  const theme = useTheme();\n  const { \n    services: allServices,\n    config,\n    stats,\n    filters,\n    setCategoryFilter,\n    setSearchTerm,\n    resetFilters,\n    getCategories,\n    getFilteredServices\n  } = useServicesContext();\n\n  // Obtener servicios filtrados\n  const filteredServices = getFilteredServices();\n\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  // Mapeo de categorías para los tabs\n  const categoryTabs = [\n    { label: 'Todos', value: undefined },\n    { label: 'Asistentes IA', value: ServiceCategory.AI_ASSISTANT },\n    { label: 'Automatización', value: ServiceCategory.AUTOMATION },\n    { label: 'Análisis', value: ServiceCategory.ANALYTICS },\n    { label: 'E-commerce', value: ServiceCategory.ECOMMERCE },\n    { label: 'Capacitación', value: ServiceCategory.TRAINING },\n    { label: 'Consultoría', value: ServiceCategory.CONSULTING }\n  ];\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedTab(newValue);\n    setCategoryFilter(categoryTabs[newValue].value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setSearchTerm(value || undefined);\n  };\n\n  const clearFilters = () => {\n    setSelectedTab(0);\n    setSearchValue('');\n    resetFilters();\n  };\n\n  return (\n    <Box sx={{ \n      minHeight: '100vh',\n      background: '#FFFFFF',\n      position: 'relative'\n    }}>\n      {/* Hero Section con Glassmorfismo */}\n      <Box sx={{ \n        position: 'relative',\n        py: { xs: 8, md: 12 },\n        overflow: 'hidden'\n      }}>\n\n        \n        <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\n          <Box sx={{ textAlign: 'center', mb: 8 }}>\n            <H1 sx={{ \n              mb: 3,\n              color: '#000000',\n              fontSize: { xs: 'clamp(2.5rem, 8vw, 4rem)', md: 'clamp(3rem, 6vw, 4.5rem)' },\n              fontWeight: 900,\n              letterSpacing: '-0.02em'\n            }}>\n              Servicios AI4U\n            </H1>\n            <H2 sx={{ \n              mb: 4, \n              fontWeight: 600,\n              color: 'text.primary',\n              fontSize: { xs: '1.5rem', md: '2rem' }\n            }}>\n              Construimos tu infraestructura de IA personalizada\n            </H2>\n            <BodyText sx={{ \n              fontSize: '1.2rem', \n              maxWidth: 800, \n              mx: 'auto',\n              color: 'text.secondary',\n              lineHeight: 1.7\n            }}>\n              En AI4U nos especializamos en crear soluciones de inteligencia artificial adaptadas específicamente a tu negocio. \n              Automatizamos procesos, liberamos tiempo operativo y transformamos ese tiempo en libertad estratégica.\n            </BodyText>\n          </Box>\n\n          {/* Services Stats Component */}\n          <ServicesStats stats={stats} getCategories={getCategories} />\n        </Container>\n      </Box>\n\n      {/* Our Process Section */}\n      <Box sx={{ py: 8, position: 'relative' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ \n            mb: 6, \n            textAlign: 'center',\n            color: '#000000',\n            fontSize: { xs: '2rem', md: '2.5rem' },\n            fontWeight: 700\n          }}>\n            Nuestro proceso\n          </H2>\n          \n          <Grid container spacing={4} justifyContent=\"center\">\n            <Grid item xs={12} md={8}>\n              <Box sx={{\n                p: 4,\n                background: '#FFFFFF',\n                border: '1px solid #E5E5E5',\n                borderRadius: 2,\n                boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n              }}>\n                <ProcessStep \n                  number={1} \n                  title={`Diagnóstico gratuito (${SERVICE_CONFIG.DIAGNOSTIC_DURATION} minutos)`}\n                  description=\"Identificamos todas las oportunidades de automatización en tu negocio\"\n                />\n                <ProcessStep \n                  number={2} \n                  title=\"Definición de prioridades\" \n                  description=\"Establecemos qué procesos automatizar primero según tu ROI\"\n                />\n                <ProcessStep \n                  number={3} \n                  title=\"Presupuesto personalizado\" \n                  description=\"Adaptamos las soluciones a tu capacidad de inversión\"\n                />\n                <ProcessStep \n                  number={4} \n                  title=\"Implementación\" \n                  description=\"Desarrollamos e integramos las soluciones en tu negocio\"\n                />\n                \n                <Box sx={{ textAlign: 'center', mt: 6 }}>\n                  <DiagnosticCTA \n                    variant=\"primary\" \n                    size=\"large\" \n                    text=\"Iniciar con diagnóstico gratuito\" \n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n\n      <Divider sx={{ my: 8, borderColor: 'rgba(0,0,0,0.1)' }} />\n\n      {/* Services Filter Section */}\n      <Box sx={{ py: 8, position: 'relative' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ \n            mb: 6, \n            textAlign: 'center',\n            color: '#000000',\n            fontSize: { xs: '2rem', md: '2.5rem' },\n            fontWeight: 700\n          }}>\n            Nuestros servicios\n          </H2>\n          \n          {/* Services Filter Component */}\n          <Box sx={{ mb: 6 }}>\n            <ServicesFilter\n              searchValue={searchValue}\n              onSearchChange={handleSearchChange}\n              selectedTab={selectedTab}\n              onTabChange={handleTabChange}\n              onClearFilters={clearFilters}\n              filteredCount={filteredServices.length}\n              categoryTabs={categoryTabs}\n            />\n          </Box>\n        </Container>\n\n        {/* Services Grid */}\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={4}>\n            {filteredServices.map((service) => (\n              <Grid \n                item \n                xs={12} \n                md={config.displaySettings.cardsPerRow === 4 ? 3 : 4} \n                key={service.id}\n              >\n                <ServiceCard \n                  service={service}\n                  showPrice={config.displaySettings.showPrices}\n                  showDeliveryTime={config.displaySettings.showDeliveryTime}\n                />\n              </Grid>\n            ))}\n          </Grid>\n\n          {filteredServices.length === 0 && (\n            <Box sx={{ \n              textAlign: 'center', \n              py: 8,\n              p: 4,\n              background: '#FFFFFF',\n              border: '1px solid #E5E5E5',\n              borderRadius: 2\n            }}>\n              <BodyText sx={{ \n                fontSize: '1.2rem', \n                color: 'text.secondary',\n                mb: 3\n              }}>\n                No se encontraron servicios que coincidan con los filtros seleccionados.\n              </BodyText>\n              <Button\n                variant=\"outline\"\n                onClick={clearFilters}\n                size=\"medium\"\n              >\n                Limpiar filtros\n              </Button>\n            </Box>\n          )}\n        </Container>\n      </Box>\n\n      {/* CTA Section */}\n      <Box sx={{ \n        py: 8,\n        position: 'relative',\n        background: '#F8F8F8'\n      }}>\n        <Container maxWidth=\"lg\">\n          <Box sx={{\n            p: 6,\n            background: '#FFFFFF',\n            border: '1px solid #E5E5E5',\n            borderRadius: 2,\n            boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n            textAlign: 'center'\n          }}>\n            <H2 sx={{ \n              mb: 3,\n              color: '#000000',\n              fontSize: { xs: '1.8rem', md: '2.2rem' },\n              fontWeight: 700\n            }}>\n              ¿Listo para liberar tu tiempo estratégico?\n            </H2>\n            <BodyText sx={{ \n              mb: 6, \n              maxWidth: 800, \n              mx: 'auto',\n              fontSize: '1.1rem',\n              color: 'text.secondary',\n              lineHeight: 1.7\n            }}>\n              Agenda tu diagnóstico gratuito de 30 minutos y descubre cómo podemos transformar tu negocio con IA.\n            </BodyText>\n            \n            <DiagnosticCTA \n              variant=\"primary\" \n              size=\"large\" \n              text=\"AGENDAR DIAGNÓSTICO GRATUITO\" \n            />\n            \n            <BodyText sx={{ \n              mt: 4, \n              fontStyle: 'italic', \n              color: 'text.secondary',\n              fontSize: '0.9rem'\n            }}>\n              Sin compromiso • Personalizado a tu negocio • Resultados desde el primer mes\n            </BodyText>\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Services;"],"names":["StyledButton","styled","MuiButton","_ref","theme","borderRadius","fontWeight","textTransform","padding","transition","boxShadow","backgroundColor","color","border","borderColor","fontSize","Button","_ref2","children","variant","size","props","muiVariant","muiColor","_jsx","disableElevation","DiagnosticCTA","showIcon","text","className","onClick","window","open","startIcon","CalendarMonthIcon","undefined","service","showPrice","showDeliveryTime","compact","useTheme","Box","sx","height","position","transform","_jsxs","p","display","flexDirection","background","overflow","top","right","zIndex","Chip","label","status","ServiceStatus","ACTIVE","COMING_SOON","DEPRECATED","getStatusText","getStatusColor","mb","textAlign","H3","xs","md","lineHeight","title","BodyText","subtitle","description","flexGrow","List","dense","disablePadding","benefits","map","benefit","index","ListItem","disableGutters","py","ListItemIcon","minWidth","CheckCircleOutlineIcon","ListItemText","primary","primaryTypographyProps","flexWrap","gap","tags","slice","tag","px","length","mt","pt","borderTop","Typography","price","deliveryTime","number","circleSize","titleSize","descriptionSize","getSizeStyles","width","bgcolor","alignItems","justifyContent","flexShrink","mr","flex","searchValue","onSearchChange","selectedTab","onTabChange","onClearFilters","filteredCount","categoryTabs","Stack","direction","spacing","TextField","fullWidth","placeholder","value","onChange","borderWidth","InputProps","startAdornment","InputAdornment","SearchIcon","clickable","icon","ClearIcon","Tabs","scrollButtons","opacity","minHeight","mx","tab","Tab","onDelete","target","stats","getCategories","statItems","total","active","Grid","container","stat","item","sm","letterSpacing","Services","services","allServices","config","filters","setCategoryFilter","setSearchTerm","resetFilters","getFilteredServices","useServicesContext","filteredServices","setSelectedTab","useState","setSearchValue","ServiceCategory","AI_ASSISTANT","AUTOMATION","ANALYTICS","ECOMMERCE","TRAINING","CONSULTING","clearFilters","Container","maxWidth","H1","H2","ServicesStats","ProcessStep","SERVICE_CONFIG","DIAGNOSTIC_DURATION","Divider","my","ServicesFilter","event","handleTabChange","newValue","displaySettings","cardsPerRow","ServiceCard","showPrices","id","fontStyle"],"sourceRoot":""}