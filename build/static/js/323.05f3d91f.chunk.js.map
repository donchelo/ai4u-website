{"version":3,"file":"static/js/323.05f3d91f.chunk.js","mappings":"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","sources":["pages/Services.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Typography,\n  Stack,\n  Chip,\n  Divider\n} from '@mui/material';\nimport { H1, H2, BodyText, Button, GeometricIcon } from '../components/shared/ui/atoms';\nimport { ServiceCard, Card, DiagnosticCTA } from '../components/shared/ui/molecules';\nimport { ProcessStep } from '../components/shared/ui/molecules';\nimport { ServicesFilter } from '../components/shared/ui/organisms';\nimport { useServicesContext } from '../context/ServicesContext';\nimport { useLanguage } from '../hooks';\nimport { useColors } from '../hooks';\nimport { ServiceCategory, ServiceSuperCategory } from '../types/service';\n\nconst Services: React.FC = () => {\n  const { t } = useLanguage();\n  const colors = useColors();\n  const { \n    config,\n    stats,\n    setCategoryFilter,\n    setSuperCategoryFilter,\n    setSearchTerm,\n    resetFilters,\n    getFilteredServices\n  } = useServicesContext();\n\n  const filteredServices = getFilteredServices();\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const [selectedSuperTab, setSelectedSuperTab] = useState<number>(0);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const superCategoryTabs = [\n    { label: t('services.filter.superCategories.0.label'), value: undefined },\n    { label: t('services.filter.superCategories.1.label'), value: ServiceSuperCategory.STRATEGY },\n    { label: t('services.filter.superCategories.2.label'), value: ServiceSuperCategory.OPERATION }\n  ];\n\n  const categoryTabs = [\n    { label: t('services.filter.categories.0.label'), value: undefined },\n    { label: t('services.filter.categories.1.label'), value: ServiceCategory.AI_ASSISTANT },\n    { label: t('services.filter.categories.2.label'), value: ServiceCategory.AUTOMATION },\n    { label: t('services.filter.categories.3.label'), value: ServiceCategory.ANALYTICS },\n    { label: t('services.filter.categories.4.label'), value: ServiceCategory.ECOMMERCE },\n    { label: t('services.filter.categories.5.label'), value: ServiceCategory.TRAINING },\n    { label: t('services.filter.categories.6.label'), value: ServiceCategory.CONSULTING }\n  ];\n\n  const handleSuperTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedSuperTab(newValue);\n    setSuperCategoryFilter(superCategoryTabs[newValue].value);\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedTab(newValue);\n    setCategoryFilter(categoryTabs[newValue].value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setSearchTerm(value || undefined);\n  };\n\n  const clearFilters = () => {\n    setSelectedTab(0);\n    setSelectedSuperTab(0);\n    setSearchValue('');\n    resetFilters();\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', bgcolor: colors.contrast.background }}>\n      {/* Hero Section */}\n      <Box sx={{ py: { xs: 4, md: 6 } }}>\n        <Container maxWidth=\"lg\">\n          <Stack spacing={3} alignItems=\"center\" textAlign=\"center\">\n            <H1 sx={{ \n              fontSize: { xs: '2rem', md: '2.5rem' },\n              fontWeight: 400\n            }}>\n              Servicios\n            </H1>\n            <H2 sx={{ \n              fontSize: { xs: '1rem', md: '1.2rem' },\n              color: colors.contrast.text.secondary,\n              fontWeight: 400\n            }}>\n              Encuentra la soluci√≥n que necesitas\n            </H2>\n            \n            {/* Stats */}\n            <Stack direction=\"row\" spacing={4} justifyContent=\"center\" flexWrap=\"wrap\">\n              <Box textAlign=\"center\">\n                <Typography variant=\"h5\" sx={{ color: colors.palette.orange, fontWeight: 600 }}>\n                  {stats.total}\n                </Typography>\n                <BodyText sx={{ fontSize: '0.8rem', color: colors.contrast.text.secondary }}>\n                  Servicios\n                </BodyText>\n              </Box>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h5\" sx={{ color: colors.palette.green, fontWeight: 600 }}>\n                  {stats.active}\n                </Typography>\n                <BodyText sx={{ fontSize: '0.8rem', color: colors.contrast.text.secondary }}>\n                  Activos\n                </BodyText>\n              </Box>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h5\" sx={{ color: colors.palette.orange, fontWeight: 600 }}>\n                  {Object.keys(stats.byCategory).length}\n                </Typography>\n                <BodyText sx={{ fontSize: '0.8rem', color: colors.contrast.text.secondary }}>\n                  Categor√≠as\n                </BodyText>\n              </Box>\n              <Box textAlign=\"center\">\n                <Typography variant=\"h5\" sx={{ color: colors.palette.green, fontWeight: 600 }}>\n                  {Object.keys(stats.bySuperCategory).length}\n                </Typography>\n                <BodyText sx={{ fontSize: '0.8rem', color: colors.contrast.text.secondary }}>\n                  Tipos\n                </BodyText>\n              </Box>\n            </Stack>\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* Services Section */}\n      <Box sx={{ py: 4, bgcolor: colors.helpers.background.secondary }}>\n        <Container maxWidth=\"xl\">\n          <Grid container spacing={3}>\n            {/* Filters Sidebar */}\n            <Grid item xs={12} md={3}>\n              <Card variant=\"glass\" sx={{ p: 3, position: 'sticky', top: 20 }}>\n                <Stack spacing={3}>\n                  <H2 sx={{ fontSize: '1.2rem', fontWeight: 500 }}>\n                    Filtros\n                  </H2>\n                  \n                  {/* Super Categories */}\n                  <Box>\n                    <BodyText sx={{ mb: 2, fontSize: '0.9rem', fontWeight: 500 }}>\n                      Tipo de servicio\n                    </BodyText>\n                    <Stack spacing={1}>\n                      {superCategoryTabs.map((tab, index) => (\n                        <Button\n                          key={index}\n                          variant={selectedSuperTab === index ? \"primary\" : \"outline\"}\n                          size=\"small\"\n                          onClick={() => handleSuperTabChange({} as React.SyntheticEvent, index)}\n                          sx={{\n                            justifyContent: 'flex-start',\n                            fontSize: '0.9rem'\n                          }}\n                        >\n                          {tab.label}\n                        </Button>\n                      ))}\n                    </Stack>\n                  </Box>\n                  \n                  {/* Services Filter */}\n                  <ServicesFilter\n                    searchValue={searchValue}\n                    onSearchChange={handleSearchChange}\n                    selectedTab={selectedTab}\n                    onTabChange={handleTabChange}\n                    onClearFilters={clearFilters}\n                    filteredCount={filteredServices.length}\n                    categoryTabs={categoryTabs}\n                  />\n                </Stack>\n              </Card>\n            </Grid>\n            \n            {/* Services Grid */}\n            <Grid item xs={12} md={9}>\n              {filteredServices.length > 0 ? (\n                <Box sx={{ overflowX: 'auto' }}>\n                  <Grid container spacing={2}>\n                    {filteredServices.map((service) => (\n                      <Grid item xs={12} sm={6} lg={4} key={service.id}>\n                        <ServiceCard \n                          service={service}\n                          showPrice={config.displaySettings.showPrices}\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Box>\n              ) : (\n                <Card variant=\"glass\" sx={{ textAlign: 'center', py: 6 }}>\n                  <GeometricIcon\n                    type=\"cross\"\n                    size=\"large\"\n                    color={colors.contrast.text.disabled}\n                    variant=\"minimal\"\n                  />\n                  <BodyText sx={{ mt: 2, mb: 3 }}>\n                    {t('services.filter.noResults.title')}\n                  </BodyText>\n                  <Button variant=\"outline\" onClick={clearFilters}>\n                    {t('services.filter.noResults.clearButton')}\n                  </Button>\n                </Card>\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n\n      <Divider />\n\n      {/* Process Section */}\n      <Box sx={{ py: 6 }}>\n        <Container maxWidth=\"lg\">\n          <Stack spacing={4} alignItems=\"center\">\n            <H2 sx={{ textAlign: 'center', fontSize: { xs: '1.8rem', md: '2.2rem' } }}>\n              {t('services.process.title')}\n            </H2>\n            \n            <Grid container spacing={3}>\n              {[\n                {\n                  number: 1,\n                  title: t('services.process.steps.0.title'),\n                  description: t('services.process.steps.0.description'),\n                  color: colors.palette.green\n                },\n                {\n                  number: 2,\n                  title: t('services.process.steps.1.title'),\n                  description: t('services.process.steps.1.description'),\n                  color: colors.palette.orange\n                },\n                {\n                  number: 3,\n                  title: t('services.process.steps.2.title'),\n                  description: t('services.process.steps.2.description'),\n                  color: colors.palette.orange\n                },\n                {\n                  number: 4,\n                  title: t('services.process.steps.3.title'),\n                  description: t('services.process.steps.3.description'),\n                  color: colors.palette.green\n                }\n              ].map((step, idx) => (\n                <Grid item xs={12} sm={6} key={idx}>\n                  <ProcessStep\n                    number={step.number}\n                    title={step.title}\n                    description={step.description}\n                    color={step.color}\n                    size=\"large\"\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* CTA Section */}\n      <Box sx={{ py: { xs: 6, md: 8 }, bgcolor: colors.helpers.background.secondary }}>\n        <Container maxWidth=\"md\">\n          <Stack spacing={3} alignItems=\"center\" textAlign=\"center\">\n            <H2 sx={{ fontSize: { xs: '1.5rem', md: '1.8rem' } }}>\n              ¬øNecesitas ayuda?\n            </H2>\n            <BodyText sx={{ maxWidth: 500 }}>\n              Agenda una consulta gratuita de 30 minutos\n            </BodyText>\n            <DiagnosticCTA \n              variant=\"primary\"\n              size=\"medium\"\n              showIcon={true}\n              text=\"Agendar consulta\"\n            />\n          </Stack>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Services;"],"names":["Services","t","useLanguage","colors","useColors","config","stats","setCategoryFilter","setSuperCategoryFilter","setSearchTerm","resetFilters","getFilteredServices","useServicesContext","filteredServices","selectedTab","setSelectedTab","useState","selectedSuperTab","setSelectedSuperTab","searchValue","setSearchValue","superCategoryTabs","label","value","undefined","ServiceSuperCategory","STRATEGY","OPERATION","categoryTabs","ServiceCategory","AI_ASSISTANT","AUTOMATION","ANALYTICS","ECOMMERCE","TRAINING","CONSULTING","clearFilters","_jsxs","Box","sx","minHeight","bgcolor","contrast","background","children","_jsx","py","xs","md","Container","maxWidth","Stack","spacing","alignItems","textAlign","H1","fontSize","fontWeight","H2","color","text","secondary","direction","justifyContent","flexWrap","Typography","variant","palette","orange","total","BodyText","green","active","Object","keys","byCategory","length","bySuperCategory","helpers","Grid","container","item","Card","p","position","top","mb","map","tab","index","Button","size","onClick","handleSuperTabChange","newValue","ServicesFilter","onSearchChange","event","target","onTabChange","handleTabChange","onClearFilters","filteredCount","overflowX","service","sm","lg","ServiceCard","showPrice","displaySettings","showPrices","id","GeometricIcon","type","disabled","mt","Divider","number","title","description","step","idx","ProcessStep","DiagnosticCTA","showIcon"],"sourceRoot":""}