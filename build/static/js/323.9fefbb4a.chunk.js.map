{"version":3,"file":"static/js/323.9fefbb4a.chunk.js","mappings":"qQAgBA,MA6WA,EA7W2BA,MACXC,EAAAA,EAAAA,KAAd,MAEEC,SAAUC,EAAW,OACrBC,EAAM,MACNC,EAAK,QACLC,EAAO,kBACPC,EAAiB,cACjBC,EAAa,aACbC,EAAY,cACZC,EAAa,oBACbC,IACEC,EAAAA,EAAAA,MAGEC,EAAmBF,KAElBG,EAAaC,IAAkBC,EAAAA,EAAAA,UAAiB,IAChDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAiB,IAGjDG,EAAe,CACnB,CAAEC,MAAO,QAASC,WAAOC,GACzB,CAAEF,MAAO,gBAAiBC,MAAOE,EAAAA,EAAgBC,cACjD,CAAEJ,MAAO,oBAAkBC,MAAOE,EAAAA,EAAgBE,YAClD,CAAEL,MAAO,cAAYC,MAAOE,EAAAA,EAAgBG,WAC5C,CAAEN,MAAO,aAAcC,MAAOE,EAAAA,EAAgBI,WAC9C,CAAEP,MAAO,kBAAgBC,MAAOE,EAAAA,EAAgBK,UAChD,CAAER,MAAO,iBAAeC,MAAOE,EAAAA,EAAgBM,aAc3CC,EAAeA,KACnBf,EAAe,GACfG,EAAe,IACfT,KAGF,OACEsB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPC,UAAW,QACXC,WAAY,oDACZC,SAAU,YACVC,SAAA,EAEAC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CACPG,SAAU,WACVG,GAAI,CAAEC,GAAI,EAAGC,GAAI,IACjBC,SAAU,UACVL,UACAN,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CAACC,SAAS,KAAKX,GAAI,CAAEG,SAAU,WAAYS,OAAQ,GAAIR,SAAA,EAC/DN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEa,UAAW,SAAUC,GAAI,GAAIV,SAAA,EACtCC,EAAAA,EAAAA,KAACU,EAAAA,GAAE,CAACf,GAAI,CACNc,GAAI,EACJE,MAAO,UACPC,SAAU,CAAEV,GAAI,SAAUC,GAAI,UAC9BU,WAAY,IACZC,cAAe,WACff,SAAC,oBAGHC,EAAAA,EAAAA,KAACe,EAAAA,GAAE,CAACpB,GAAI,CACNc,GAAI,EACJI,WAAY,IACZF,MAAO,eACPC,SAAU,CAAEV,GAAI,SAAUC,GAAI,WAC9BJ,SAAC,wDAGHC,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CAACrB,GAAI,CACZiB,SAAU,SACVN,SAAU,IACVW,GAAI,OACJN,MAAO,iBACPO,WAAY,IACZL,WAAY,KACZd,SAAC,uOAOLN,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAAQvB,SAAA,EACjDC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIsB,GAAI,EAAGrB,GAAI,EAAEJ,UAC9BC,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACTC,MAAM,YACN3C,MAAOhB,EAAM4D,MACbC,SAAS,yBACTC,SAAS,SACTC,QAAQ,QACRC,KAAK,eAGT/B,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIsB,GAAI,EAAGrB,GAAI,EAAEJ,UAC9BC,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACTC,MAAM,gBACN3C,MAAOX,IAAgB4D,OACvBJ,SAAS,0BACTC,SAAS,WACTC,QAAQ,QACRC,KAAK,eAGT/B,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIsB,GAAI,EAAGrB,GAAI,EAAEJ,UAC9BC,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACTC,MAAM,eACN3C,MAAM,OACN6C,SAAS,qBACTC,SAAS,SACTC,QAAQ,UACRC,KAAK,eAGT/B,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIsB,GAAI,EAAGrB,GAAI,EAAEJ,UAC9BC,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACTC,MAAM,kBACN3C,MAAM,MACN6C,SAAS,yBACTC,SAAS,WACTC,QAAQ,QACRC,KAAK,UACLE,MAAM,kBAQhBjC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,EAAGH,SAAU,YAAaC,UACvCN,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CAACC,SAAS,KAAIP,SAAA,EACtBC,EAAAA,EAAAA,KAACe,EAAAA,GAAE,CAACpB,GAAI,CACNc,GAAI,EACJD,UAAW,SACXG,MAAO,UACPC,SAAU,CAAEV,GAAI,SAAUC,GAAI,UAC9BU,WAAY,KACZd,SAAC,qBAIHC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAAQvB,UACjDC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIC,GAAI,GAAGJ,UACxBC,EAAAA,EAAAA,KAACkC,EAAAA,GAAI,CAACJ,QAAQ,QAAQnC,GAAI,CAAEwC,EAAG,GAAIpC,UACjCN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEwC,EAAG,GAAIpC,SAAA,EAChBC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEtB,SACxB,CACC,CACEqC,OAAQ,EACRV,MAAO,4BAAyBW,EAAAA,GAAeC,+BAC/CC,YAAa,2EACbC,KAAM,UAER,CACEJ,OAAQ,EACRV,MAAO,+BACPa,YAAa,mEACbC,KAAM,YAER,CACEJ,OAAQ,EACRV,MAAO,4BACPa,YAAa,0DACbC,KAAM,UAER,CACEJ,OAAQ,EACRV,MAAO,oBACPa,YAAa,0DACbC,KAAM,gBAERC,IAAI,CAACC,EAAMC,KACX3C,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIsB,GAAI,EAAEzB,UACvBN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPiD,QAAS,OACTC,WAAY,aACZC,IAAK,EACLX,EAAG,GACHpC,SAAA,EACAC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAa,CACZC,KAAMN,EAAKF,KACXT,KAAK,SACLpB,MAAe,IAARgC,EAAY,UAAY,qBAC/Bb,QAAiB,IAARa,EAAY,SAAW,aAElClD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEsD,KAAM,GAAIlD,SAAA,EACnBC,EAAAA,EAAAA,KAACkD,EAAAA,GAAE,CAACvD,GAAI,CACNc,GAAI,EACJG,SAAU,SACVC,WAAY,IACZF,MAAO,gBACPZ,SACC2C,EAAKhB,SAER1B,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CAACrB,GAAI,CACZgB,MAAO,iBACPC,SAAU,UACVM,WAAY,KACZnB,SACC2C,EAAKH,qBA3BiBI,OAmCnC3C,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEa,UAAW,SAAU2C,GAAI,EAAGC,GAAI,EAAGC,UAAW,6BAA8BtD,UACrFC,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,qBAS5BtD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,GAAIF,UACjBC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,SAAS,KAAIP,UACtBC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CACP4D,OAAQ,MACR1D,WAAY,oEACZoB,GAAI,OACJuC,MAAO,cAMb/D,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,EAAGH,SAAU,YAAaC,SAAA,EACvCN,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CAACC,SAAS,KAAIP,SAAA,EACtBC,EAAAA,EAAAA,KAACe,EAAAA,GAAE,CAACpB,GAAI,CACNc,GAAI,EACJD,UAAW,SACXG,MAAO,UACPC,SAAU,CAAEV,GAAI,SAAUC,GAAI,UAC9BU,WAAY,KACZd,SAAC,wBAKHC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEc,GAAI,GAAIV,UACjBC,EAAAA,EAAAA,KAACyD,EAAAA,GAAc,CACb9E,YAAaA,EACb+E,eA5NgBC,IAC1B,MAAM5E,EAAQ4E,EAAMC,OAAO7E,MAC3BH,EAAeG,GACfb,EAAca,QAASC,IA0NbR,YAAaA,EACbqF,YAnOYC,CAACH,EAA6BI,KACpDtF,EAAesF,GACf9F,EAAkBY,EAAakF,GAAUhF,QAkO/BiF,eAAgBxE,EAChByE,cAAe1F,EAAiByD,OAChCnD,aAAcA,UAMpBY,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CAACC,SAAS,KAAIP,SAAA,EACtBC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEtB,SACxBxB,EAAiBkE,IAAKyB,IACrBlE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CACHI,MAAI,EACJrB,GAAI,GACJC,GAA2C,IAAvCrC,EAAOqG,gBAAgBC,YAAoB,EAAI,EAAErE,UAGrDC,EAAAA,EAAAA,KAACqE,EAAAA,GAAW,CACVH,QAASA,EACTI,UAAWxG,EAAOqG,gBAAgBI,WAClCC,iBAAkB1G,EAAOqG,gBAAgBK,oBALtCN,EAAQO,OAWU,IAA5BlG,EAAiByD,SAChBvC,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACJ,QAAQ,QAAQnC,GAAI,CAAEa,UAAW,SAAUP,GAAI,GAAIF,SAAA,EACvDC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAa,CACZC,KAAK,QACLjB,KAAK,QACLpB,MAAM,qBACNmB,QAAQ,aAEV9B,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CAACrB,GAAI,CACZiB,SAAU,SACVD,MAAO,iBACPF,GAAI,EACJ0C,GAAI,GACJpD,SAAC,8EAGHC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAM,CACL5C,QAAQ,UACR6C,QAASnF,EACTuC,KAAK,SAAQhC,SACd,8BASTC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CACPM,GAAI,EACJH,SAAU,YACVC,UACAC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,SAAS,KAAIP,UACtBN,EAAAA,EAAAA,MAACyC,EAAAA,GAAI,CAACJ,QAAQ,OAAOnC,GAAI,CAAEa,UAAW,SAAU2B,EAAG,GAAIpC,SAAA,EACrDC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEc,GAAI,GAAIV,UACjBC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAa,CACZC,KAAK,WACLjB,KAAK,QACLpB,MAAM,UACNmB,QAAQ,cAGZ9B,EAAAA,EAAAA,KAACe,EAAAA,GAAE,CAACpB,GAAI,CACNc,GAAI,EACJE,MAAO,UACPC,SAAU,CAAEV,GAAI,SAAUC,GAAI,QAC9BU,WAAY,KACZd,SAAC,sDAGHC,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CAACrB,GAAI,CACZc,GAAI,EACJH,SAAU,IACVW,GAAI,OACJL,SAAU,OACVD,MAAO,2BACPO,WAAY,KACZnB,SAAC,+GAIHC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACC,GAAI,CAAEc,GAAI,GAAIV,UACjBC,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,OAGhBtD,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CAACrB,GAAI,CACZiF,UAAW,SACXjE,MAAO,2BACPC,SAAU,UACVb,SAAC,qG","sources":["pages/Services.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Divider, \n  useTheme,\n  alpha\n} from '@mui/material';\nimport { H1, H2, H3, BodyText, Button, GeometricIcon } from '../components/shared/ui/atoms';\nimport { DiagnosticCTA, ServiceCard, ProcessStep, Card, MetricCard } from '../components/shared/ui/molecules';\nimport { ServicesFilter } from '../components/shared/ui/organisms';\nimport { useServicesContext } from '../context/ServicesContext';\nimport { ServiceCategory } from '../types/service';\nimport { SERVICE_CONFIG } from '../utils/constants';\n\nconst Services: React.FC = () => {\n  const theme = useTheme();\n  const { \n    services: allServices,\n    config,\n    stats,\n    filters,\n    setCategoryFilter,\n    setSearchTerm,\n    resetFilters,\n    getCategories,\n    getFilteredServices\n  } = useServicesContext();\n\n  // Obtener servicios filtrados\n  const filteredServices = getFilteredServices();\n\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  // Mapeo de categorías para los tabs\n  const categoryTabs = [\n    { label: 'Todos', value: undefined },\n    { label: 'Asistentes IA', value: ServiceCategory.AI_ASSISTANT },\n    { label: 'Automatización', value: ServiceCategory.AUTOMATION },\n    { label: 'Análisis', value: ServiceCategory.ANALYTICS },\n    { label: 'E-commerce', value: ServiceCategory.ECOMMERCE },\n    { label: 'Capacitación', value: ServiceCategory.TRAINING },\n    { label: 'Consultoría', value: ServiceCategory.CONSULTING }\n  ];\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedTab(newValue);\n    setCategoryFilter(categoryTabs[newValue].value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setSearchTerm(value || undefined);\n  };\n\n  const clearFilters = () => {\n    setSelectedTab(0);\n    setSearchValue('');\n    resetFilters();\n  };\n\n  return (\n    <Box sx={{ \n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #fafafa 0%, #f5f5f5 100%)',\n      position: 'relative'\n    }}>\n      {/* Hero Section minimalista */}\n      <Box sx={{ \n        position: 'relative',\n        py: { xs: 6, md: 10 },\n        overflow: 'hidden'\n      }}>\n        <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\n          <Box sx={{ textAlign: 'center', mb: 8 }}>\n            <H1 sx={{ \n              mb: 3,\n              color: '#000000',\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\n              fontWeight: 300,\n              letterSpacing: '-0.01em'\n            }}>\n              Servicios AI4U\n            </H1>\n            <H2 sx={{ \n              mb: 4, \n              fontWeight: 400,\n              color: 'text.primary',\n              fontSize: { xs: '1.2rem', md: '1.5rem' }\n            }}>\n              Construimos tu infraestructura de IA personalizada\n            </H2>\n            <BodyText sx={{ \n              fontSize: '1.1rem', \n              maxWidth: 700, \n              mx: 'auto',\n              color: 'text.secondary',\n              lineHeight: 1.6,\n              fontWeight: 300\n            }}>\n              En AI4U nos especializamos en crear soluciones de inteligencia artificial adaptadas específicamente a tu negocio. \n              Automatizamos procesos, liberamos tiempo operativo y transformamos ese tiempo en libertad estratégica.\n            </BodyText>\n          </Box>\n\n          {/* Stats con MetricCards glassmorphism */}\n          <Grid container spacing={4} justifyContent=\"center\">\n            <Grid item xs={12} sm={6} md={3}>\n              <MetricCard\n                title=\"Servicios\"\n                value={stats.total}\n                subtitle=\"Soluciones disponibles\"\n                iconType=\"square\"\n                variant=\"glass\"\n                size=\"compact\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <MetricCard\n                title=\"Categorías\"\n                value={getCategories().length}\n                subtitle=\"Áreas especializadas\"\n                iconType=\"triangle\"\n                variant=\"glass\"\n                size=\"compact\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <MetricCard\n                title=\"ROI promedio\"\n                value=\"300%\"\n                subtitle=\"Retorno en 3 meses\"\n                iconType=\"circle\"\n                variant=\"primary\"\n                size=\"compact\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <MetricCard\n                title=\"Tiempo ahorrado\"\n                value=\"70%\"\n                subtitle=\"Reducción operativa\"\n                iconType=\"arrow-up\"\n                variant=\"glass\"\n                size=\"compact\"\n                trend=\"up\"\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n\n      {/* Our Process Section */}\n      <Box sx={{ py: 8, position: 'relative' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ \n            mb: 6, \n            textAlign: 'center',\n            color: '#000000',\n            fontSize: { xs: '1.8rem', md: '2.2rem' },\n            fontWeight: 400\n          }}>\n            Nuestro proceso\n          </H2>\n          \n          <Grid container spacing={4} justifyContent=\"center\">\n            <Grid item xs={12} md={10}>\n              <Card variant=\"glass\" sx={{ p: 0 }}>\n                <Box sx={{ p: 4 }}>\n                  <Grid container spacing={4}>\n                    {[\n                      {\n                        number: 1,\n                        title: `Diagnóstico gratuito (${SERVICE_CONFIG.DIAGNOSTIC_DURATION} minutos)`,\n                        description: \"Identificamos todas las oportunidades de automatización en tu negocio\",\n                        icon: \"circle\"\n                      },\n                      {\n                        number: 2,\n                        title: \"Definición de prioridades\",\n                        description: \"Establecemos qué procesos automatizar primero según tu ROI\",\n                        icon: \"triangle\"\n                      },\n                      {\n                        number: 3,\n                        title: \"Presupuesto personalizado\",\n                        description: \"Adaptamos las soluciones a tu capacidad de inversión\",\n                        icon: \"square\"\n                      },\n                      {\n                        number: 4,\n                        title: \"Implementación\",\n                        description: \"Desarrollamos e integramos las soluciones en tu negocio\",\n                        icon: \"arrow-right\"\n                      }\n                    ].map((step, idx) => (\n                      <Grid item xs={12} sm={6} key={idx}>\n                        <Box sx={{ \n                          display: 'flex', \n                          alignItems: 'flex-start', \n                          gap: 3,\n                          p: 2\n                        }}>\n                          <GeometricIcon\n                            type={step.icon as any}\n                            size=\"medium\"\n                            color={idx === 0 ? \"#B6CA40\" : \"rgba(0, 0, 0, 0.3)\"}\n                            variant={idx === 0 ? \"filled\" : \"minimal\"}\n                          />\n                          <Box sx={{ flex: 1 }}>\n                            <H3 sx={{ \n                              mb: 1, \n                              fontSize: '1.1rem', \n                              fontWeight: 500,\n                              color: 'text.primary'\n                            }}>\n                              {step.title}\n                            </H3>\n                            <BodyText sx={{ \n                              color: 'text.secondary', \n                              fontSize: '0.95rem',\n                              lineHeight: 1.5\n                            }}>\n                              {step.description}\n                            </BodyText>\n                          </Box>\n                        </Box>\n                      </Grid>\n                    ))}\n                  </Grid>\n                  \n                  <Box sx={{ textAlign: 'center', mt: 6, pt: 4, borderTop: '1px solid rgba(0,0,0,0.1)' }}>\n                    <DiagnosticCTA />\n                  </Box>\n                </Box>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n\n      <Box sx={{ py: 2 }}>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ \n            height: '1px', \n            background: 'linear-gradient(90deg, transparent, rgba(0,0,0,0.1), transparent)',\n            mx: 'auto',\n            width: '60%'\n          }} />\n        </Container>\n      </Box>\n\n      {/* Services Filter Section */}\n      <Box sx={{ py: 8, position: 'relative' }}>\n        <Container maxWidth=\"lg\">\n          <H2 sx={{ \n            mb: 6, \n            textAlign: 'center',\n            color: '#000000',\n            fontSize: { xs: '1.8rem', md: '2.2rem' },\n            fontWeight: 400\n          }}>\n            Nuestros servicios\n          </H2>\n          \n          {/* Services Filter Component */}\n          <Box sx={{ mb: 6 }}>\n            <ServicesFilter\n              searchValue={searchValue}\n              onSearchChange={handleSearchChange}\n              selectedTab={selectedTab}\n              onTabChange={handleTabChange}\n              onClearFilters={clearFilters}\n              filteredCount={filteredServices.length}\n              categoryTabs={categoryTabs}\n            />\n          </Box>\n        </Container>\n\n        {/* Services Grid */}\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={4}>\n            {filteredServices.map((service) => (\n              <Grid \n                item \n                xs={12} \n                md={config.displaySettings.cardsPerRow === 4 ? 3 : 4} \n                key={service.id}\n              >\n                <ServiceCard \n                  service={service}\n                  showPrice={config.displaySettings.showPrices}\n                  showDeliveryTime={config.displaySettings.showDeliveryTime}\n                />\n              </Grid>\n            ))}\n          </Grid>\n\n          {filteredServices.length === 0 && (\n            <Card variant=\"glass\" sx={{ textAlign: 'center', py: 6 }}>\n              <GeometricIcon\n                type=\"cross\"\n                size=\"large\"\n                color=\"rgba(0, 0, 0, 0.3)\"\n                variant=\"minimal\"\n              />\n              <BodyText sx={{ \n                fontSize: '1.1rem', \n                color: 'text.secondary',\n                mb: 3,\n                mt: 2\n              }}>\n                No se encontraron servicios que coincidan con los filtros seleccionados.\n              </BodyText>\n              <Button\n                variant=\"outline\"\n                onClick={clearFilters}\n                size=\"medium\"\n              >\n                Limpiar filtros\n              </Button>\n            </Card>\n          )}\n        </Container>\n      </Box>\n\n      {/* CTA Section */}\n      <Box sx={{ \n        py: 8,\n        position: 'relative'\n      }}>\n        <Container maxWidth=\"lg\">\n          <Card variant=\"dark\" sx={{ textAlign: 'center', p: 6 }}>\n            <Box sx={{ mb: 3 }}>\n              <GeometricIcon\n                type=\"arrow-up\"\n                size=\"large\"\n                color=\"#B6CA40\"\n                variant=\"filled\"\n              />\n            </Box>\n            <H2 sx={{ \n              mb: 3,\n              color: '#FFFFFF',\n              fontSize: { xs: '1.6rem', md: '2rem' },\n              fontWeight: 400\n            }}>\n              ¿Listo para liberar tu tiempo estratégico?\n            </H2>\n            <BodyText sx={{ \n              mb: 6, \n              maxWidth: 600, \n              mx: 'auto',\n              fontSize: '1rem',\n              color: 'rgba(255, 255, 255, 0.8)',\n              lineHeight: 1.6\n            }}>\n              Agenda tu diagnóstico gratuito de 30 minutos y descubre cómo podemos transformar tu negocio con IA.\n            </BodyText>\n            \n            <Box sx={{ mb: 4 }}>\n              <DiagnosticCTA />\n            </Box>\n            \n            <BodyText sx={{ \n              fontStyle: 'italic', \n              color: 'rgba(255, 255, 255, 0.6)',\n              fontSize: '0.9rem'\n            }}>\n              Sin compromiso • Personalizado a tu negocio • Resultados desde el primer mes\n            </BodyText>\n          </Card>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Services;"],"names":["Services","useTheme","services","allServices","config","stats","filters","setCategoryFilter","setSearchTerm","resetFilters","getCategories","getFilteredServices","useServicesContext","filteredServices","selectedTab","setSelectedTab","useState","searchValue","setSearchValue","categoryTabs","label","value","undefined","ServiceCategory","AI_ASSISTANT","AUTOMATION","ANALYTICS","ECOMMERCE","TRAINING","CONSULTING","clearFilters","_jsxs","Box","sx","minHeight","background","position","children","_jsx","py","xs","md","overflow","Container","maxWidth","zIndex","textAlign","mb","H1","color","fontSize","fontWeight","letterSpacing","H2","BodyText","mx","lineHeight","Grid","container","spacing","justifyContent","item","sm","MetricCard","title","total","subtitle","iconType","variant","size","length","trend","Card","p","number","SERVICE_CONFIG","DIAGNOSTIC_DURATION","description","icon","map","step","idx","display","alignItems","gap","GeometricIcon","type","flex","H3","mt","pt","borderTop","DiagnosticCTA","height","width","ServicesFilter","onSearchChange","event","target","onTabChange","handleTabChange","newValue","onClearFilters","filteredCount","service","displaySettings","cardsPerRow","ServiceCard","showPrice","showPrices","showDeliveryTime","id","Button","onClick","fontStyle"],"sourceRoot":""}