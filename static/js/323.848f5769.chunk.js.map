{"version":3,"file":"static/js/323.848f5769.chunk.js","mappings":"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","sources":["data/internalLinkingStrategy.ts","pages/Services.tsx"],"sourcesContent":["// Estrategia de link building interno para SEO\n// Mapeo semántico de enlaces contextuales entre páginas\n\nexport interface InternalLink {\n  to: string;\n  label: string;\n  context?: string;\n  trackingLabel?: string;\n  priority: 'high' | 'medium' | 'low';\n  semantic: 'related' | 'progression' | 'evidence' | 'cross-sell';\n}\n\nexport interface ServiceCrossReference {\n  serviceSlug: string;\n  serviceName: string;\n  description: string;\n  relatedCases: {\n    client: string;\n    sector: string;\n    slug: string;\n  }[];\n  relatedServices: string[];\n}\n\n// Mapeo principal de enlaces internos por página\nexport const INTERNAL_LINKS_MAP: Record<string, InternalLink[]> = {\n  // Home (/) - Hub Principal\n  '/': [\n    {\n      to: '/servicios',\n      label: 'Conoce nuestros servicios',\n      context: 'Descubre cómo podemos automatizar tu empresa',\n      trackingLabel: 'home_to_services',\n      priority: 'high',\n      semantic: 'progression'\n    },\n    {\n      to: '/casos-de-uso',\n      label: 'Ver casos reales',\n      context: 'Empresas que ya transformaron sus procesos',\n      trackingLabel: 'home_to_cases',\n      priority: 'high',\n      semantic: 'evidence'\n    },\n    {\n      to: '/por-que-ai4u',\n      label: 'Nuestro diferencial',\n      context: 'Por qué elegir AI4U para tu transformación',\n      trackingLabel: 'home_to_why',\n      priority: 'medium',\n      semantic: 'related'\n    }\n  ],\n\n  // Servicios (/servicios) - Conversion Focus\n  '/servicios': [\n    {\n      to: '/casos-de-uso',\n      label: 'Ver resultados reales',\n      context: 'Casos de éxito con estos servicios',\n      trackingLabel: 'services_to_cases',\n      priority: 'high',\n      semantic: 'evidence'\n    },\n    {\n      to: '/por-que-ai4u',\n      label: '¿Por qué elegir AI4U?',\n      context: 'Nuestras ventajas competitivas',\n      trackingLabel: 'services_to_why',\n      priority: 'medium',\n      semantic: 'related'\n    },\n    {\n      to: '/',\n      label: 'Volver al inicio',\n      context: 'Conoce más sobre nuestra filosofía',\n      trackingLabel: 'services_to_home',\n      priority: 'low',\n      semantic: 'related'\n    }\n  ],\n\n  // Casos de Uso (/casos-de-uso) - Social Proof\n  '/casos-de-uso': [\n    {\n      to: '/servicios',\n      label: 'Servicios utilizados',\n      context: 'Conoce los servicios detrás de estos resultados',\n      trackingLabel: 'cases_to_services',\n      priority: 'high',\n      semantic: 'cross-sell'\n    },\n    {\n      to: '/por-que-ai4u',\n      label: 'Tu empresa podría ser la siguiente',\n      context: 'Descubre por qué estos clientes eligieron AI4U',\n      trackingLabel: 'cases_to_why',\n      priority: 'medium',\n      semantic: 'progression'\n    },\n    {\n      to: '/',\n      label: 'Comenzar tu transformación',\n      context: 'Inicia tu proceso de automatización',\n      trackingLabel: 'cases_to_home',\n      priority: 'medium',\n      semantic: 'progression'\n    }\n  ],\n\n  // Por qué AI4U (/por-que-ai4u) - Differentiation\n  '/por-que-ai4u': [\n    {\n      to: '/casos-de-uso',\n      label: 'Resultados comprobables',\n      context: 'Ve la evidencia de nuestras ventajas',\n      trackingLabel: 'why_to_cases',\n      priority: 'high',\n      semantic: 'evidence'\n    },\n    {\n      to: '/servicios',\n      label: 'Nuestros servicios',\n      context: 'Conoce qué ofrecemos exactamente',\n      trackingLabel: 'why_to_services',\n      priority: 'high',\n      semantic: 'progression'\n    },\n    {\n      to: '/',\n      label: 'Agendar diagnóstico',\n      context: 'Comienza tu proceso de transformación',\n      trackingLabel: 'why_to_home',\n      priority: 'medium',\n      semantic: 'progression'\n    }\n  ]\n};\n\n// Servicios y sus casos relacionados\nexport const SERVICE_CROSS_REFERENCES: Record<string, ServiceCrossReference> = {\n  'superai-empresarial': {\n    serviceSlug: 'superai-empresarial',\n    serviceName: 'SuperAI Empresarial',\n    description: 'Arquitectura integral de IA que transforma recursos operativos en ventaja estratégica',\n    relatedCases: [\n      { client: 'TRUE', sector: 'Fashion', slug: 'fashion' },\n      { client: 'HUA Naturals', sector: 'Wellness', slug: 'wellness' }\n    ],\n    relatedServices: ['gpt-personalizado', 'automatizacion-inteligente']\n  },\n  'gpt-personalizado': {\n    serviceSlug: 'gpt-personalizado',\n    serviceName: 'GPT Personalizado',\n    description: 'Modelos de lenguaje entrenados específicamente para tu industria y procesos',\n    relatedCases: [\n      { client: 'EAFIT', sector: 'Educación Superior', slug: 'educacion-superior' },\n      { client: 'HUA Naturals', sector: 'Wellness', slug: 'wellness' }\n    ],\n    relatedServices: ['superai-empresarial', 'chatbots-avanzados']\n  },\n  'automatizacion-inteligente': {\n    serviceSlug: 'automatizacion-inteligente',\n    serviceName: 'Automatización Inteligente',\n    description: 'Procesos automatizados que se adaptan y aprenden de tu operación',\n    relatedCases: [\n      { client: 'La Magdalena', sector: 'Impact Storytelling', slug: 'impact-storytelling' },\n      { client: 'TRUE', sector: 'Fashion', slug: 'fashion' }\n    ],\n    relatedServices: ['superai-empresarial', 'machine-learning']\n  },\n  'chatbots-avanzados': {\n    serviceSlug: 'chatbots-avanzados',\n    serviceName: 'Chatbots Avanzados',\n    description: 'Asistentes conversacionales que entienden contexto y generan valor real',\n    relatedCases: [\n      { client: 'HUA Naturals', sector: 'Wellness', slug: 'wellness' }\n    ],\n    relatedServices: ['gpt-personalizado', 'automatizacion-inteligente']\n  }\n};\n\n// Enlaces contextuales específicos por sección\nexport const CONTEXTUAL_CTA_LINKS = {\n  heroSection: {\n    primary: { to: '/servicios', label: 'Conoce nuestros servicios' },\n    secondary: { to: '/casos-de-uso', label: 'Ver casos reales' }\n  },\n  featuresSection: {\n    automation: { to: '/servicios#automatizacion-inteligente', label: 'Automatización Inteligente' },\n    ai: { to: '/servicios#superai-empresarial', label: 'SuperAI Empresarial' },\n    personalization: { to: '/servicios#gpt-personalizado', label: 'GPT Personalizado' }\n  },\n  socialProof: {\n    cases: { to: '/casos-de-uso', label: 'Ver todos los casos' },\n    why: { to: '/por-que-ai4u', label: '¿Por qué nos eligen?' }\n  }\n};\n\n// Función para obtener enlaces relacionados por página\nexport const getRelatedLinks = (currentPath: string): InternalLink[] => {\n  return INTERNAL_LINKS_MAP[currentPath] || [];\n};\n\n// Función para obtener referencias cruzadas de servicios\nexport const getServiceCrossReference = (serviceSlug: string): ServiceCrossReference | null => {\n  return SERVICE_CROSS_REFERENCES[serviceSlug] || null;\n};\n\n// Función para generar enlaces contextuales basados en contenido\nexport const generateContextualLinks = (\n  currentPage: string, \n  contentContext: string[]\n): InternalLink[] => {\n  const baseLinks = getRelatedLinks(currentPage);\n  \n  // Filtrar y priorizar basado en contexto\n  return baseLinks\n    .filter(link => \n      contentContext.some(context => \n        link.semantic === context || \n        link.trackingLabel?.includes(context)\n      )\n    )\n    .slice(0, 3); // Máximo 3 enlaces para mantener minimalismo\n};","import React, { useState } from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Typography,\n  Stack,\n  Divider\n} from '@mui/material';\nimport { H2, BodyText, Button, SEOHead } from '../components/shared/ui/atoms';\nimport { ServiceCard, DiagnosticCTA, RelatedPages, SuperCategoryFilter, ExpandableSection } from '../components/shared/ui/molecules';\nimport { ProcessStep } from '../components/shared/ui/molecules';\nimport { ServicesFilter, ServicesPremiumHero } from '../components/shared/ui/organisms';\nimport { useServicesContext } from '../context/ServicesContext';\nimport { useLanguage } from '../hooks';\nimport { useColors } from '../hooks';\nimport { ServiceCategory, ServiceSuperCategory } from '../types/service';\nimport { getServicesStructuredData, getPageMetaTags } from '../utils/seo';\nimport { getRelatedLinks } from '../data/internalLinkingStrategy';\n\nconst Services: React.FC = () => {\n  const { t } = useLanguage();\n  const colors = useColors();\n  const { \n    config,\n    setCategoryFilter,\n    setSuperCategoryFilter,\n    setSearchTerm,\n    resetFilters,\n    getFilteredServices\n  } = useServicesContext();\n\n  // Obtener meta tags optimizados para la página de servicios\n  const metaTags = getPageMetaTags('services');\n  const structuredData = getServicesStructuredData();\n  \n  // Obtener enlaces contextuales para la página Services\n  const relatedLinks = getRelatedLinks('/servicios');\n\n  const filteredServices = getFilteredServices();\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const [selectedSuperTab, setSelectedSuperTab] = useState<number>(0);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const superCategoryTabs = [\n    { label: t('services.filter.superCategories.0.label'), value: undefined },\n    { label: t('services.filter.superCategories.1.label'), value: ServiceSuperCategory.STRATEGY },\n    { label: t('services.filter.superCategories.2.label'), value: ServiceSuperCategory.OPERATION }\n  ];\n\n  const categoryTabs = [\n    { label: t('services.filter.categories.0.label'), value: undefined },\n    { label: t('services.filter.categories.1.label'), value: ServiceCategory.AI_ASSISTANT },\n    { label: t('services.filter.categories.2.label'), value: ServiceCategory.AUTOMATION },\n    { label: t('services.filter.categories.3.label'), value: ServiceCategory.ANALYTICS },\n    { label: t('services.filter.categories.4.label'), value: ServiceCategory.ECOMMERCE },\n    { label: t('services.filter.categories.5.label'), value: ServiceCategory.TRAINING },\n    { label: t('services.filter.categories.6.label'), value: ServiceCategory.CONSULTING }\n  ];\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedTab(newValue);\n    setCategoryFilter(categoryTabs[newValue].value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setSearchTerm(value || undefined);\n  };\n\n  const clearFilters = () => {\n    setSelectedTab(0);\n    setSelectedSuperTab(0);\n    setSearchValue('');\n    resetFilters();\n  };\n\n  return (\n    <Box sx={{ \n      minHeight: '100vh', \n      bgcolor: colors.contrast.background,\n      position: 'relative'\n    }}>\n      {/* SEO Head con meta tags optimizados */}\n      <SEOHead\n        title={metaTags.title}\n        description={metaTags.description}\n        keywords={metaTags.keywords}\n        canonical=\"https://ai4u.com.co/servicios\"\n        structuredData={structuredData}\n      />\n\n      {/* Hero Premium para Servicios */}\n      <Box sx={{ position: 'relative', zIndex: 1 }}>\n        <ServicesPremiumHero \n          title=\"Fashion Agent\"\n          maxItems={2}\n        />\n      </Box>\n\n      {/* Services Section */}\n      <Box sx={{ \n        py: 4, \n        bgcolor: colors.contrast.surface, \n        mt: 4,\n        position: 'relative',\n        zIndex: 2\n      }}>\n        <Container maxWidth=\"xl\">\n          <Grid container spacing={3}>\n            {/* Filters Sidebar */}\n            <Grid item xs={12} md={3}>\n              <Box sx={{ \n                position: 'sticky', \n                top: 20, \n                zIndex: 3,\n                height: 'fit-content'\n              }}>\n                <Stack spacing={3}>\n                  {/* Super Categories Filter */}\n                  <SuperCategoryFilter\n                    selectedValue={superCategoryTabs[selectedSuperTab].value}\n                    onValueChange={(value) => {\n                      const index = superCategoryTabs.findIndex(tab => tab.value === value);\n                      setSelectedSuperTab(index >= 0 ? index : 0);\n                      setSuperCategoryFilter(value);\n                    }}\n                    options={superCategoryTabs}\n                  />\n                  \n                  {/* Services Filter */}\n                  <ServicesFilter\n                    searchValue={searchValue}\n                    onSearchChange={handleSearchChange}\n                    selectedTab={selectedTab}\n                    onTabChange={handleTabChange}\n                    onClearFilters={clearFilters}\n                    filteredCount={filteredServices.length}\n                    categoryTabs={categoryTabs}\n                  />\n                </Stack>\n              </Box>\n            </Grid>\n            \n            {/* Services Grid */}\n            <Grid item xs={12} md={9}>\n              {filteredServices.length > 0 ? (\n                <Box sx={{ \n                  position: 'relative', \n                  zIndex: 2,\n                  minHeight: '400px'\n                }}>\n                  {/* Mostrar primeros 6 servicios siempre */}\n                  <Grid container spacing={2} sx={{ mb: 4 }}>\n                    {filteredServices.slice(0, 6).map((service) => (\n                      <Grid item xs={12} sm={6} lg={4} key={service.id} id={`service-${service.id}`} sx={{ scrollMarginTop: 96 }}>\n                        <ServiceCard \n                          service={service}\n                          showPrice={config.displaySettings.showPrices}\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n\n                  {/* Mostrar servicios adicionales si hay más de 6 */}\n                  {filteredServices.length > 6 && (\n                    <ExpandableSection\n                      title={`Explorar ${filteredServices.length - 6} servicios más`}\n                      variant=\"minimal\"\n                      defaultExpanded={false}\n                    >\n                      <Grid container spacing={2}>\n                        {filteredServices.slice(6).map((service) => (\n                          <Grid item xs={12} sm={6} lg={4} key={service.id} id={`service-${service.id}`} sx={{ scrollMarginTop: 96 }}>\n                            <ServiceCard \n                              service={service}\n                              showPrice={config.displaySettings.showPrices}\n                            />\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </ExpandableSection>\n                  )}\n                </Box>\n              ) : (\n                <Box sx={{ \n                  textAlign: 'center', \n                  py: 8,\n                  color: colors.contrast.text.secondary\n                }}>\n                  <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                    No se encontraron servicios\n                  </Typography>\n                  <Button \n                    variant=\"outline\" \n                    onClick={clearFilters}\n                    sx={{ mt: 2 }}\n                  >\n                    Limpiar filtros\n                  </Button>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n\n      <Divider />\n\n      {/* Process Section */}\n      <Box sx={{ py: { xs: 6, md: 8 }, position: 'relative', zIndex: 1, bgcolor: colors.contrast.surface }}>\n        <Container maxWidth=\"xl\">\n          <Stack spacing={4} alignItems=\"center\">\n            <Box sx={{ textAlign: 'center', mb: 2 }}>\n              <H2 sx={{ \n                fontSize: { xs: '1.8rem', md: '2.2rem', lg: '2.5rem' },\n                fontWeight: 600,\n                letterSpacing: '-0.02em',\n                mb: 2\n              }}>\n                {t('services.process.title')}\n              </H2>\n              <BodyText sx={{ \n                fontSize: { xs: '1rem', md: '1.1rem' },\n                color: colors.contrast.text.secondary,\n                maxWidth: 600,\n                mx: 'auto'\n              }}>\n                {t('services.process.subtitle')}\n              </BodyText>\n            </Box>\n            \n            <Grid container spacing={{ xs: 3, md: 4 }} sx={{ mt: 2 }}>\n              {[\n                {\n                  number: 1,\n                  title: t('services.process.steps.0.title'),\n                  description: t('services.process.steps.0.description'),\n                  color: colors.contrast.text.secondary\n                },\n                {\n                  number: 2,\n                  title: t('services.process.steps.1.title'),\n                  description: t('services.process.steps.1.description'),\n                  color: colors.contrast.text.secondary\n                },\n                {\n                  number: 3,\n                  title: t('services.process.steps.2.title'),\n                  description: t('services.process.steps.2.description'),\n                  color: colors.contrast.text.secondary\n                },\n                {\n                  number: 4,\n                  title: t('services.process.steps.3.title'),\n                  description: t('services.process.steps.3.description'),\n                  color: colors.contrast.text.secondary\n                }\n              ].map((step, idx) => (\n                <Grid item xs={12} sm={6} key={idx}>\n                  <ProcessStep\n                    number={step.number}\n                    title={step.title}\n                    description={step.description}\n                    color={step.color}\n                    size=\"medium\"\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* CTA Section */}\n      <Box sx={{ py: { xs: 6, md: 8 }, bgcolor: colors.contrast.surface, position: 'relative', zIndex: 1 }}>\n        <Container maxWidth=\"md\">\n          <Stack spacing={3} alignItems=\"center\" textAlign=\"center\">\n            <H2 sx={{ fontSize: { xs: '1.4rem', md: '1.6rem' } }}>\n              {t('common.help.title')}\n            </H2>\n            <BodyText sx={{ maxWidth: 500 }}>\n              {t('common.help.subtitle')}\n            </BodyText>\n            <DiagnosticCTA \n              variant=\"primary\"\n              size=\"medium\"\n              showIcon={true}\n              text={t('common.schedule.title')}\n            />\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* Enlaces Relacionados - SEO Internal Linking */}\n      <Container maxWidth=\"lg\">\n        <RelatedPages \n          pages={relatedLinks}\n          title={t('common.related.title')}\n          variant=\"horizontal\"\n        />\n      </Container>\n    </Box>\n  );\n};\n\nexport default Services;"],"names":["INTERNAL_LINKS_MAP","to","label","context","trackingLabel","priority","semantic","getRelatedLinks","currentPath","Services","t","useLanguage","colors","useColors","config","setCategoryFilter","setSuperCategoryFilter","setSearchTerm","resetFilters","getFilteredServices","useServicesContext","metaTags","getPageMetaTags","structuredData","getServicesStructuredData","relatedLinks","filteredServices","selectedTab","setSelectedTab","useState","selectedSuperTab","setSelectedSuperTab","searchValue","setSearchValue","superCategoryTabs","value","undefined","ServiceSuperCategory","STRATEGY","OPERATION","categoryTabs","ServiceCategory","AI_ASSISTANT","AUTOMATION","ANALYTICS","ECOMMERCE","TRAINING","CONSULTING","clearFilters","_jsxs","Box","sx","minHeight","bgcolor","contrast","background","position","children","_jsx","SEOHead","title","description","keywords","canonical","zIndex","ServicesPremiumHero","maxItems","py","surface","mt","Container","maxWidth","Grid","container","spacing","item","xs","md","top","height","Stack","SuperCategoryFilter","selectedValue","onValueChange","index","findIndex","tab","options","ServicesFilter","onSearchChange","event","target","onTabChange","handleTabChange","newValue","onClearFilters","filteredCount","length","mb","slice","map","service","sm","lg","id","scrollMarginTop","ServiceCard","showPrice","displaySettings","showPrices","ExpandableSection","variant","defaultExpanded","textAlign","color","text","secondary","Typography","Button","onClick","Divider","alignItems","H2","fontSize","fontWeight","letterSpacing","BodyText","mx","number","step","idx","ProcessStep","size","DiagnosticCTA","showIcon","RelatedPages","pages"],"sourceRoot":""}